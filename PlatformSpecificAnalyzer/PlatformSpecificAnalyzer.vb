' FOR EASIER F5 DEBUGGING OF THIS ANALYZER:
' Set "PlatformSpecificAnalyzer" as your startup project. Then under MyProject > Debug, set
' StartAction: external program
'     C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\devenv.exe
' Command-line arguments: 
'     "C:\Users\lwischik\Source\Repos\blog\Analyzers\DemoUWP_CS\DemoUWP_CS.sln" /RootSuffix Analyzer
'     "C:\Users\lwischik\Source\Repos\blog\Analyzers\DemoUWP_VB\DemoUWP_VB.sln" /RootSuffix Analyzer
' Note: I want to migrate this analyzer over to a PCL. But PCLs don't support the debug tab: https://github.com/dotnet/roslyn/issues/4542

Imports System.Collections.Immutable
Imports System.IO
Imports System.Runtime.CompilerServices
Imports Microsoft.CodeAnalysis

Public Enum PlatformKind
    Unchecked ' .NET and Win8.1
    Uwp ' the core UWP platform
    ExtensionSDK ' Desktop, Mobile, IOT, Xbox extension SDK
    User ' from when the user put a *Specific attribute on something
End Enum

Public Structure Platform
    Public Kind As PlatformKind
    Public Version As String ' For UWP, this is version 10240, 10586, or 14393. For User, the fully qualified name of the attribute in use
    Public ByParameterCount As Boolean ' For UWP only

    Public Sub New(kind As PlatformKind, Optional version As String = Nothing, Optional byParameterCount As Boolean = False)
        Me.Kind = kind
        Me.Version = version
        Me.ByParameterCount = byParameterCount
        Select Case kind
            Case PlatformKind.Unchecked : If version IsNot Nothing Then Throw New ArgumentException("No version expected")
            Case PlatformKind.Uwp : If version <> "10240" AndAlso version <> "10586" AndAlso version <> "14393" Then Throw New ArgumentException("Only known SDKs are 10240, 10586, and 14393")
            Case PlatformKind.ExtensionSDK : If version IsNot Nothing Then Throw New ArgumentException("Don't specify versions for extension SDKs")
            Case PlatformKind.User : If Not version?.EndsWith("Specific") Then Throw New ArgumentException("User specific should end in Specific")
        End Select
        If byParameterCount AndAlso kind <> PlatformKind.Uwp Then Throw New ArgumentException("Only UWP can be distinguished by parameter count")
    End Sub

    Public Shared Function OfSymbol(symbol As ISymbol) As Platform
        ' This function tells which version/platform the symbol is from.
        ' This function is hard-coded with knowledge up to SDK 10586.
        ' I could have made it a general-purpose function which looks up the SDK
        ' files on disk. But I think it's more elegant to hard-code it into the analyzer,
        ' so as to reduce disk-access while the analyzer runs.

        If symbol Is Nothing Then Return New Platform(PlatformKind.Unchecked)
        If symbol.ContainingNamespace?.ToDisplayString.StartsWith("Windows.") Then
            Dim assembly = symbol.ContainingAssembly.Name, version = symbol.ContainingAssembly.Identity.Version.Major

            ' Any call to ApiInformation.* is allowed without warning
            If symbol.ContainingType?.Name = "ApiInformation" Then Return New Platform(PlatformKind.Uwp, "10240")

            ' I don't want to give warning when analyzing code in an 8.1 or PCL project.
            ' In those two targets, every Windows type is found in Windows.winmd, so that's how we'll suppress it:
            If assembly = "Windows" Then Return New Platform(PlatformKind.Unchecked)

            ' Some WinRT types like Windows.UI.Color get projected to come from .NET assemblies, always present:
            If assembly.StartsWith("System.Runtime.") Then Return New Platform(PlatformKind.Uwp, "10240")

            ' Some things are emphatically part of UWP.10240
            If assembly = "Windows.Foundation.FoundationContract" OrElse
                (assembly = "Windows.Foundation.UniversalApiContract" AndAlso version = 1) OrElse
                assembly = "Windows.Networking.Connectivity.WwanContract" Then Return New Platform(PlatformKind.Uwp, "10240")

            ' Some things were in platform-specific in 10240, but moved to UWP in 10586
            ' Should we report them as "platform-specific"? Or should we report them as "version-specific"?
            ' I'll report them as version-specific, because I think that will be a nicer message.
            If assembly = "Windows.ApplicationModel.Calls.CallsVoipContract" OrElse
               assembly = "Windows.Graphics.Printing3D.Printing3DContract" OrElse
               assembly = "Windows.Devices.Printers.PrintersContract" Then Return New Platform(PlatformKind.Uwp, "10586")

            ' Some things in UWP have been added between 10240 and 10586
            If assembly = "Windows.Foundation.UniversalApiContract" Then
                Dim isType = (symbol.Kind = SymbolKind.NamedType)
                Dim typeName = If(isType, symbol.ToDisplayString, symbol.ContainingType.ToDisplayString)
                Dim newMembers As List(Of NewMember) = Nothing
                Dim in10586 = CheckCollectionForType(GetUniversalApiAdditions10586(), typeName, symbol)
                If in10586 = 0 Then
                    Return New Platform(PlatformKind.Uwp, "10586") ' the entire type was found in 10586
                ElseIf in10586 = 1 Then
                    Return New Platform(PlatformKind.Uwp, "10586", True) ' the entire type was found in 10586 with matching parameter lengths
                Else
                    Dim in14393 = CheckCollectionForType(GetUniversalApiAdditions14393(), typeName, symbol)

                    If in14393 = 0 Then
                        Return New Platform(PlatformKind.Uwp, "14393") ' the entire type was found in 14393
                    ElseIf in14393 = 1 Then
                        Return New Platform(PlatformKind.Uwp, "14393", True) ' the entire type was found in 14393 with matching parameter lengths
                    Else
                        Return New Platform(PlatformKind.Uwp, "10240") ' the type was in 10240
                    End If

                End If

                '                Return New Platform(PlatformKind.Uwp, "10240") ' this member existed in 10240
            End If

            ' All other Windows.* types come from platform-specific extensions
            Return New Platform(PlatformKind.ExtensionSDK)

        Else
            Dim attr = GetPlatformSpecificAttribute(symbol)
            If attr IsNot Nothing Then Return New Platform(PlatformKind.User, attr)
            Return New Platform(PlatformKind.Unchecked)
        End If
    End Function

    Private Shared Function CheckCollectionForType(collection As Dictionary(Of String, List(Of NewMember)), typeName As String, symbol As ISymbol) As Int16
        Dim newMembers As List(Of NewMember) = Nothing
        Dim inCollection = collection.TryGetValue(typeName, newMembers)

        If Not inCollection Or newMembers Is Nothing Then Return 0 ' the entire type was new in this collection

        If symbol.Kind = SymbolKind.NamedType Then Return -1

        Dim memberName = symbol.Name
        For Each newMember In newMembers
            If memberName = newMember.Name And Not newMember.ParameterCount.HasValue Then Return 0 ' this member was new in collection
            If symbol.Kind <> SymbolKind.Method Then Continue For
            If memberName = newMember.Name AndAlso CType(symbol, IMethodSymbol).Parameters.Count = newMember.ParameterCount Then Return 1
        Next

        Return -1 ' this member existed in a different collection
    End Function

End Structure


Class HowToGuard
    Public TypeToCheck As String
    Public MemberToCheck As String
    Public ParameterCountToCheck As Integer?
    Public KindOfCheck As String = "IsTypePresent"
    Public AttributeToIntroduce As String = "System.Runtime.CompilerServices.PlatformSpecific"
    Public AttributeFriendlyName As String = "PlatformSpecific"

    Shared Function Symbol(target As ISymbol) As HowToGuard
        Dim plat = Platform.OfSymbol(target)
        '
        If plat.Kind = PlatformKind.Unchecked Then
            Throw New InvalidOperationException("oops! don't know why I was asked to check something that's fine")
        ElseIf plat.Kind = PlatformKind.User Then
            Dim lastDot = plat.Version.LastIndexOf("."c)
            Dim attrName = If(lastDot = -1, plat.Version, plat.Version.Substring(lastDot + 1))
            Return New HowToGuard With {.AttributeToIntroduce = plat.Version, .AttributeFriendlyName = attrName, .TypeToCheck = "??"}
        ElseIf plat.Kind = PlatformKind.ExtensionSDK Then
            Return New HowToGuard With {.TypeToCheck = If(target.Kind = SymbolKind.NamedType, target.ToDisplayString, target.ContainingType.ToDisplayString)}
        ElseIf plat.Kind = PlatformKind.Uwp AndAlso target.Kind = SymbolKind.NamedType Then
            Return New HowToGuard With {.TypeToCheck = target.ToDisplayString}
        ElseIf plat.Kind = PlatformKind.Uwp AndAlso target.Kind <> SymbolKind.NamedType Then
            Dim g As New HowToGuard With {.TypeToCheck = target.ContainingType.ToDisplayString}
            Dim d = GetUniversalApiAdditions10586(), newMembers As List(Of NewMember) = Nothing
            If Not d.TryGetValue(g.TypeToCheck, newMembers) Then Throw New InvalidOperationException("oops! expected this UWP version API to be in the dictionary of new things")
            If newMembers IsNot Nothing Then
                g.MemberToCheck = target.Name
                If target.Kind = SymbolKind.Field Then g.KindOfCheck = "IsEnumNamedValuePresent" ' the only fields in WinRT are enum fields
                If target.Kind = SymbolKind.Event Then g.KindOfCheck = "IsEventPresent"
                If target.Kind = SymbolKind.Property Then g.KindOfCheck = "IsPropertyPresent" ' TODO: if SDK starts introducing additional accessors on properties, we'll have to change this
                If target.Kind = SymbolKind.Method Then g.KindOfCheck = "IsMethodPresent"
                If target.Kind = SymbolKind.Method AndAlso plat.ByParameterCount Then g.ParameterCountToCheck = CType(target, IMethodSymbol).Parameters.Count
            End If
            Return g
        Else
            Throw New InvalidOperationException("oops! impossible platform kind")
        End If
    End Function

End Class


Module PlatformSpecificAnalyzer
    Public Function CreatePlatformRule(targetPlatform As Platform) As DiagnosticDescriptor
        Return New DiagnosticDescriptor("UWP001", "Platform-specific", $"Platform-specific code ({targetPlatform.Kind})",
                                        "Safety", DiagnosticSeverity.Warning, True)
    End Function

    Public Function CreateVersionRule(targetPlatform As Platform) As DiagnosticDescriptor
        Return New DiagnosticDescriptor("UWP002", "Version-specific", $"Version-specific code ({targetPlatform.Version})",
                                        "Safety", DiagnosticSeverity.Warning, True)
    End Function
    Public GenericRulePlatform As New DiagnosticDescriptor("UWP001", "Platform-specific", "Platform-specific code", "Safety", DiagnosticSeverity.Warning, True)
    Public GenericRuleVersion As New DiagnosticDescriptor("UWP002", "Version-specific", "Version-specific code", "Safety", DiagnosticSeverity.Warning, True)

    Function GetTargetPlatformMinVersion(additionalFiles As ImmutableArray(Of AdditionalText)) As Integer
        ' When PlatformSpecificAnalyzer is build as a NuGet package, the package includes
        ' a.targets File with the following lines. The effect is to add a fake file,
        ' which doesn't show up in SolnExplorer and which doesn't even exist, but whose
        ' FILENAME encodes the TargetPlatformMinVersion. That way, when the user modifies
        ' TargetPlatformMinVersion from within the ProjectProperties, msbuild re-evaluates
        ' the AdditionalFiles, and Roslyn re-runs its analyzers and can pick it up.
        ' Thanks Jason Malinowski for the hint on how to do this. He instructed me to
        ' write in the comments "this is a terrible hack and no one should ever copy it".
        '      <AdditionalFileItemNames>PlatformSpecificAnalyzerInfo</AdditionalFileItemNames>
        '      <ItemGroup>
        '        <PlatformSpecificAnalyzerInfo Include = "tpmv_$(TargetPlatformMinVersion).tpmv"><Visible>False</Visible></PlatformSpecificAnalyzerInfo>
        '      </ItemGroup>

        ' I'm caching the value because, heck, it seems weird to recompute it every time.
        Static Dim cacheKey As ImmutableArray(Of AdditionalText) = Nothing
        Static Dim cacheValue As Integer = 10240 ' if we don't find that terrible hack, assume 10240
        If additionalFiles = cacheKey Then Return cacheValue Else cacheKey = additionalFiles
        Dim tpmv = additionalFiles.FirstOrDefault(Function(af) af.Path.EndsWith(".tpmv"))?.Path
        If tpmv Is Nothing Then
            cacheValue = 10240
        Else
            tpmv = Path.GetFileNameWithoutExtension(tpmv).Replace("tpmv_10.0.", "").Replace(".0", "")
            Dim i As Integer : cacheValue = If(Integer.TryParse(tpmv, i), i, 10240)
        End If
        Return cacheValue
    End Function

    Function GetPlatformSpecificAttribute(symbol As ISymbol) As String
        If symbol Is Nothing Then Return Nothing
        For Each attr In symbol.GetAttributes
            If attr.AttributeClass.Name.EndsWith("SpecificAttribute") Then Return attr.AttributeClass.ToDisplayString.Replace("Attribute", "")
        Next
        Return Nothing
    End Function

    Function HasPlatformSpecificAttribute(symbol As ISymbol) As Boolean
        Return (GetPlatformSpecificAttribute(symbol) IsNot Nothing)
    End Function

    Structure NewMember
        Public Name As String
        Public ParameterCount As Integer?

        Sub New(s As String)
            If s.Length > 2 AndAlso s(s.Length - 2) = "#"c Then
                Name = s.Substring(0, s.Length - 2)
                ParameterCount = Integer.Parse(s.Substring(s.Length - 1))
            Else
                Name = s
                ParameterCount = Nothing
            End If
        End Sub
    End Structure

    Function GetUniversalApiAdditions10586() As Dictionary(Of String, List(Of NewMember))
        Static Dim _d As New Dictionary(Of String, List(Of String)) From {
    {"Windows.ApplicationModel.Activation.ActivationKind", "DevicePairing", "Print3DWorkflow"},
    {"Windows.ApplicationModel.Activation.DevicePairingActivatedEventArgs"},
    {"Windows.ApplicationModel.Activation.IDevicePairingActivatedEventArgs"},
    {"Windows.ApplicationModel.Appointments.AppointmentCalendarSyncStatus", "ManualAccountRemovalRequired"},
    {"Windows.ApplicationModel.Background.SensorDataThresholdTrigger"},
    {"Windows.ApplicationModel.Chat.ChatConversation", "CanModifyParticipants"},
    {"Windows.ApplicationModel.Contacts.ContactCardOptions", "ServerSearchContactListIds"},
    {"Windows.ApplicationModel.Contacts.ContactListSyncStatus", "ManualAccountRemovalRequired"},
    {"Windows.ApplicationModel.DataTransfer.DataPackageView", "SetAcceptedFormatId"},
    {"Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo", "AllowedOperations"},
    {"Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation", "AllowedOperations"},
    {"Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs", "AcceptedFormatId"},
    {"Windows.ApplicationModel.Email.EmailCertificateValidationStatus"},
    {"Windows.ApplicationModel.Email.EmailMailbox", "ResolveRecipientsAsync", "TryCreateFolderAsync", "TryDeleteFolderAsync", "TryEmptyFolderAsync", "ValidateCertificatesAsync"},
    {"Windows.ApplicationModel.Email.EmailMailboxCapabilities", "CanCreateFolder", "CanDeleteFolder", "CanEmptyFolder", "CanMoveFolder", "CanResolveRecipients", "CanValidateCertificates"},
    {"Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult"},
    {"Windows.ApplicationModel.Email.EmailMailboxCreateFolderStatus"},
    {"Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus"},
    {"Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus"},
    {"Windows.ApplicationModel.Email.EmailMailboxPolicies", "MustEncryptSmimeMessages", "MustSignSmimeMessages"},
    {"Windows.ApplicationModel.Email.EmailMailboxSyncStatus", "ManualAccountRemovalRequired"},
    {"Windows.ApplicationModel.Email.EmailMeetingInfo", "IsReportedOutOfDateByServer"},
    {"Windows.ApplicationModel.Email.EmailMessage", "SmimeData", "SmimeKind"},
    {"Windows.ApplicationModel.Email.EmailMessageSmimeKind"},
    {"Windows.ApplicationModel.Email.EmailRecipientResolutionResult"},
    {"Windows.ApplicationModel.Email.EmailRecipientResolutionStatus"},
    {"Windows.ApplicationModel.Store.CurrentApp", "GetCustomerCollectionsIdAsync", "GetCustomerPurchaseIdAsync"},
    {"Windows.ApplicationModel.Store.ListingInformation", "CurrencyCode", "FormattedBasePrice", "IsOnSale", "SaleEndDate"},
    {"Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem", "Cancel", "Pause", "Restart"},
    {"Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "Cancel", "GetIsAppAllowedToInstallAsync", "Pause", "Restart", "SearchForAllUpdatesAsync", "SearchForUpdatesAsync", "StartAppInstallAsync", "UpdateAppByPackageFamilyNameAsync"},
    {"Windows.ApplicationModel.Store.Preview.StoreConfiguration", "PurchasePromptingPolicy"},
    {"Windows.ApplicationModel.Store.ProductListing", "CurrencyCode", "FormattedBasePrice", "IsOnSale", "SaleEndDate"},
    {"Windows.ApplicationModel.UserDataAccounts.UserDataAccount", "EnterpriseId", "IsProtectedUnderLock"},
    {"Windows.Devices.Bluetooth.BluetoothAddressType"},
    {"Windows.Devices.Bluetooth.BluetoothDevice", "DeviceInformation", "GetDeviceSelectorFromBluetoothAddress", "GetDeviceSelectorFromClassOfDevice", "GetDeviceSelectorFromConnectionStatus", "GetDeviceSelectorFromDeviceName", "GetDeviceSelectorFromPairingState"},
    {"Windows.Devices.Bluetooth.BluetoothError", "DisabledByUser"},
    {"Windows.Devices.Bluetooth.BluetoothLEAppearance"},
    {"Windows.Devices.Bluetooth.BluetoothLEAppearanceCategories"},
    {"Windows.Devices.Bluetooth.BluetoothLEAppearanceSubcategories"},
    {"Windows.Devices.Bluetooth.BluetoothLEDevice", "Appearance", "BluetoothAddressType", "DeviceInformation", "FromBluetoothAddressAsync", "GetDeviceSelectorFromAppearance", "GetDeviceSelectorFromBluetoothAddress", "GetDeviceSelectorFromConnectionStatus", "GetDeviceSelectorFromDeviceName", "GetDeviceSelectorFromPairingState"},
    {"Windows.Devices.Bluetooth.Rfcomm.RfcommServiceProvider", "StartAdvertising#2"},
    {"Windows.Devices.Enumeration.DeviceInformationCustomPairing"},
    {"Windows.Devices.Enumeration.DeviceInformationPairing", "Custom", "PairAsync", "ProtectionLevel", "TryRegisterForAllInboundPairingRequests", "UnpairAsync"},
    {"Windows.Devices.Enumeration.DevicePairingKinds"},
    {"Windows.Devices.Enumeration.DevicePairingRequestedEventArgs"},
    {"Windows.Devices.Enumeration.DevicePairingResultStatus", "Failed", "OperationAlreadyInProgress", "PairingCanceled", "RejectedByHandler", "RemoteDeviceHasAssociation", "RequiredHandlerNotRegistered"},
    {"Windows.Devices.Enumeration.DeviceUnpairingResult"},
    {"Windows.Devices.Enumeration.DeviceUnpairingResultStatus"},
    {"Windows.Devices.Enumeration.IDevicePairingSettings"},
    {"Windows.Devices.Perception.KnownPerceptionFrameSourceProperties", "DeviceId"},
    {"Windows.Devices.Perception.PerceptionColorFrameSource", "DeviceId"},
    {"Windows.Devices.Perception.PerceptionDepthFrameSource", "DeviceId"},
    {"Windows.Devices.Perception.PerceptionInfraredFrameSource", "DeviceId"},
    {"Windows.Devices.Printers.Extensions.Print3DWorkflow"},
    {"Windows.Devices.Printers.Extensions.Print3DWorkflowDetail"},
    {"Windows.Devices.Printers.Extensions.Print3DWorkflowPrintRequestedEventArgs"},
    {"Windows.Devices.Printers.Extensions.Print3DWorkflowStatus"},
    {"Windows.Devices.Sensors.ISensorDataThreshold"},
    {"Windows.Devices.Sensors.Pedometer", "GetCurrentReadings", "GetReadingsFromTriggerDetails"},
    {"Windows.Devices.Sensors.PedometerDataThreshold"},
    {"Windows.Devices.Sensors.ProximitySensor", "GetReadingsFromTriggerDetails"},
    {"Windows.Devices.Sensors.ProximitySensorDataThreshold"},
    {"Windows.Devices.Sensors.SensorDataThresholdTriggerDetails"},
    {"Windows.Devices.Sensors.SensorType"},
    {"Windows.Devices.WiFiDirect.WiFiDirectAdvertisement", "SupportedConfigurationMethods"},
    {"Windows.Devices.WiFiDirect.WiFiDirectConfigurationMethod"},
    {"Windows.Devices.WiFiDirect.WiFiDirectConnectionParameters", "GetDevicePairingKinds", "PreferenceOrderedConfigurationMethods", "PreferredPairingProcedure"},
    {"Windows.Devices.WiFiDirect.WiFiDirectPairingProcedure"},
    {"Windows.Gaming.UI.GameBar"},
    {"Windows.Graphics.DirectX.DirectXAlphaMode"},
    {"Windows.Graphics.Display.DisplayInformation", "DiagonalSizeInInches"},
    {"Windows.Graphics.Holographic.HolographicAdapterId"},
    {"Windows.Graphics.Holographic.HolographicCamera"},
    {"Windows.Graphics.Holographic.HolographicCameraPose"},
    {"Windows.Graphics.Holographic.HolographicCameraRenderingParameters"},
    {"Windows.Graphics.Holographic.HolographicFrame"},
    {"Windows.Graphics.Holographic.HolographicFramePrediction"},
    {"Windows.Graphics.Holographic.HolographicFramePresentResult"},
    {"Windows.Graphics.Holographic.HolographicFramePresentWaitBehavior"},
    {"Windows.Graphics.Holographic.HolographicSpace"},
    {"Windows.Graphics.Holographic.HolographicSpaceCameraAddedEventArgs"},
    {"Windows.Graphics.Holographic.HolographicSpaceCameraRemovedEventArgs"},
    {"Windows.Graphics.Holographic.HolographicStereoTransform"},
    {"Windows.Management.Deployment.PackageInstallState", "Paused"},
    {"Windows.Media.Capture.AppCapture"},
    {"Windows.Media.Core.MediaBinder"},
    {"Windows.Media.Core.MediaBindingEventArgs"},
    {"Windows.Media.Core.MediaSource", "CreateFromMediaBinder", "Reset", "State", "StateChanged"},
    {"Windows.Media.Core.MediaSourceState"},
    {"Windows.Media.Core.MediaSourceStateChangedEventArgs"},
    {"Windows.Media.DialProtocol.DialDevice", "FriendlyName", "Thumbnail"},
    {"Windows.Media.Playback.MediaPlaybackItem", "FindFromMediaSource"},
    {"Windows.Media.Playback.MediaPlaybackList", "MaxPrefetchTime", "SetShuffledItems", "ShuffledItems", "StartingItem"},
    {"Windows.Media.Playback.MediaPlayer", "AddAudioEffect", "RemoveAllEffects"},
    {"Windows.Media.Protection.ProtectionCapabilities"},
    {"Windows.Media.Protection.ProtectionCapabilityResult"},
    {"Windows.Media.Streaming.Adaptive.AdaptiveMediaSource", "AdvancedSettings"},
    {"Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings"},
    {"Windows.Perception.People.HeadPose"},
    {"Windows.Perception.PerceptionTimestamp"},
    {"Windows.Perception.PerceptionTimestampHelper"},
    {"Windows.Perception.Spatial.SpatialAnchor"},
    {"Windows.Perception.Spatial.SpatialAnchorManager"},
    {"Windows.Perception.Spatial.SpatialAnchorRawCoordinateSystemAdjustedEventArgs"},
    {"Windows.Perception.Spatial.SpatialAnchorStore"},
    {"Windows.Perception.Spatial.SpatialAnchorTransferManager"},
    {"Windows.Perception.Spatial.SpatialBoundingBox"},
    {"Windows.Perception.Spatial.SpatialBoundingFrustum"},
    {"Windows.Perception.Spatial.SpatialBoundingOrientedBox"},
    {"Windows.Perception.Spatial.SpatialBoundingSphere"},
    {"Windows.Perception.Spatial.SpatialBoundingVolume"},
    {"Windows.Perception.Spatial.SpatialCoordinateSystem"},
    {"Windows.Perception.Spatial.SpatialLocatability"},
    {"Windows.Perception.Spatial.SpatialLocation"},
    {"Windows.Perception.Spatial.SpatialLocator"},
    {"Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference"},
    {"Windows.Perception.Spatial.SpatialLocatorPositionalTrackingDeactivatingEventArgs"},
    {"Windows.Perception.Spatial.SpatialPerceptionAccessStatus"},
    {"Windows.Perception.Spatial.SpatialStationaryFrameOfReference"},
    {"Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo"},
    {"Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh"},
    {"Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer"},
    {"Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions"},
    {"Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver"},
    {"Windows.Security.Authentication.Web.Core.WebTokenRequest", "AppProperties"},
    {"Windows.Security.Authentication.Web.Provider.WebAccountManager", "PullCookiesAsync"},
    {"Windows.Security.Credentials.KeyCredential", "RetrievePublicKey"},
    {"Windows.Services.Maps.MapService", "DataAttributions"},
    {"Windows.Storage.DownloadsFolder", "CreateFileForUserAsync", "CreateFolderForUserAsync"},
    {"Windows.Storage.KnownFolderId"},
    {"Windows.Storage.KnownFolders", "GetFolderForUserAsync"},
    {"Windows.Storage.StorageLibrary", "GetLibraryForUserAsync"},
    {"Windows.System.MemoryManager", "TrySetAppMemoryUsageLimit"},
    {"Windows.System.Profile.PlatformDataCollectionLevel"},
    {"Windows.System.Profile.PlatformDiagnosticsAndUsageDataSettings"},
    {"Windows.UI.Composition.ColorKeyFrameAnimation"},
    {"Windows.UI.Composition.CompositionAnimation", "SetColorParameter", "SetQuaternionParameter"},
    {"Windows.UI.Composition.CompositionBackfaceVisibility"},
    {"Windows.UI.Composition.CompositionBatchCompletedEventArgs"},
    {"Windows.UI.Composition.CompositionBatchTypes"},
    {"Windows.UI.Composition.CompositionBitmapInterpolationMode"},
    {"Windows.UI.Composition.CompositionBorderMode"},
    {"Windows.UI.Composition.CompositionBrush"},
    {"Windows.UI.Composition.CompositionColorBrush"},
    {"Windows.UI.Composition.CompositionColorSpace"},
    {"Windows.UI.Composition.CompositionCommitBatch"},
    {"Windows.UI.Composition.CompositionCompositeMode"},
    {"Windows.UI.Composition.CompositionDrawingSurface"},
    {"Windows.UI.Composition.CompositionEffectBrush"},
    {"Windows.UI.Composition.CompositionEffectFactory", "CreateBrush", "ExtendedError", "LoadStatus"},
    {"Windows.UI.Composition.CompositionEffectFactoryLoadStatus", "Pending"},
    {"Windows.UI.Composition.CompositionGraphicsDevice", "CreateDrawingSurface", "RenderingDeviceReplaced"},
    {"Windows.UI.Composition.CompositionObject", "StartAnimation", "StopAnimation"},
    {"Windows.UI.Composition.CompositionPropertySet", "InsertColor", "InsertQuaternion", "TryGetColor", "TryGetQuaternion"},
    {"Windows.UI.Composition.CompositionScopedBatch"},
    {"Windows.UI.Composition.CompositionSurfaceBrush"},
    {"Windows.UI.Composition.Compositor", "CreateColorBrush", "CreateColorKeyFrameAnimation", "CreateQuaternionKeyFrameAnimation", "CreateScopedBatch", "CreateSpriteVisual", "CreateSurfaceBrush", "GetCommitBatch"},
    {"Windows.UI.Composition.QuaternionKeyFrameAnimation"},
    {"Windows.UI.Composition.RenderingDeviceReplacedEventArgs"},
    {"Windows.UI.Composition.SpriteVisual"},
    {"Windows.UI.Composition.Visual", "AnchorPoint", "BackfaceVisibility", "BorderMode", "CompositeMode", "IsVisible", "RotationAngleInDegrees"},
    {"Windows.UI.Core.CoreWindow", "PointerRoutedAway", "PointerRoutedReleased", "PointerRoutedTo"},
    {"Windows.UI.Core.ICorePointerRedirector"},
    {"Windows.UI.Input.KeyboardDeliveryInterceptor"},
    {"Windows.UI.Input.Spatial.SpatialGestureRecognizer"},
    {"Windows.UI.Input.Spatial.SpatialGestureSettings"},
    {"Windows.UI.Input.Spatial.SpatialHoldCanceledEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialHoldCompletedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialHoldStartedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialInteraction"},
    {"Windows.UI.Input.Spatial.SpatialInteractionDetectedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialInteractionManager"},
    {"Windows.UI.Input.Spatial.SpatialInteractionSource"},
    {"Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialInteractionSourceKind"},
    {"Windows.UI.Input.Spatial.SpatialInteractionSourceLocation"},
    {"Windows.UI.Input.Spatial.SpatialInteractionSourceProperties"},
    {"Windows.UI.Input.Spatial.SpatialInteractionSourceState"},
    {"Windows.UI.Input.Spatial.SpatialManipulationCanceledEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialManipulationCompletedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialManipulationDelta"},
    {"Windows.UI.Input.Spatial.SpatialManipulationStartedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialManipulationUpdatedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialNavigationCanceledEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialNavigationCompletedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialNavigationUpdatedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialPointerPose"},
    {"Windows.UI.Input.Spatial.SpatialRecognitionEndedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialRecognitionStartedEventArgs"},
    {"Windows.UI.Input.Spatial.SpatialTappedEventArgs"},
    {"Windows.UI.StartScreen.JumpList"},
    {"Windows.UI.StartScreen.JumpListItem"},
    {"Windows.UI.StartScreen.JumpListItemKind"},
    {"Windows.UI.StartScreen.JumpListSystemGroupKind"},
    {"Windows.UI.Text.Core.CoreTextEditContext", "NotifyFocusLeaveCompleted"},
    {"Windows.UI.ViewManagement.ApplicationViewTransferContext"},
    {"Windows.UI.WebUI.WebUIDevicePairingActivatedEventArgs"},
    {"Windows.UI.Xaml.Automation.AutomationElementIdentifiers", "LandmarkTypeProperty", "LocalizedLandmarkTypeProperty"},
    {"Windows.UI.Xaml.Automation.AutomationProperties", "GetLandmarkType", "GetLocalizedLandmarkType", "LandmarkTypeProperty", "LocalizedLandmarkTypeProperty", "SetLandmarkType", "SetLocalizedLandmarkType"},
    {"Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType"},
    {"Windows.UI.Xaml.Automation.Peers.AutomationPeer", "GetLandmarkType", "GetLandmarkTypeCore", "GetLocalizedLandmarkType", "GetLocalizedLandmarkTypeCore"},
    {"Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs", "ChangeReason"},
    {"Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs", "ChangeReason"},
    {"Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason"},
    {"Windows.UI.Xaml.Controls.Maps.MapControl", "MapRightTapped"},
    {"Windows.UI.Xaml.Controls.Maps.MapLoadingStatus", "DataUnavailable"},
    {"Windows.UI.Xaml.Controls.Maps.MapPolygon", "Paths"},
    {"Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs"},
    {"Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs", "ChangeReason"},
    {"Windows.UI.Xaml.Controls.MenuFlyoutPresenter", "TemplateSettings"},
    {"Windows.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings", "DropDownContentMinWidth"},
    {"Windows.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings", "OverflowContentMaxWidth"},
    {"Windows.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings"},
    {"Windows.UI.Xaml.Controls.RichEditBox", "ClipboardCopyFormat", "ClipboardCopyFormatProperty", "GetLinguisticAlternativesAsync"},
    {"Windows.UI.Xaml.Controls.RichEditClipboardFormat"},
    {"Windows.UI.Xaml.Controls.TextBox", "GetLinguisticAlternativesAsync"},
    {"Windows.UI.Xaml.Controls.WebViewPermissionType", "PointerLock"},
    {"Windows.UI.Xaml.Hosting.ElementCompositionPreview", "GetElementChildVisual", "GetElementVisual", "GetScrollViewerManipulationPropertySet", "SetElementChildVisual"},
    {"Windows.UI.Xaml.Media.FontFamily", "XamlAutoFontFamily"},
    {"Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs", "ExtendedError"},
    {"Windows.Web.Http.Filters.HttpBaseProtocolFilter", "CookieUsageBehavior"},
    {"Windows.Web.Http.Filters.HttpCookieUsageBehavior"}
                }

        Static Dim _d2 As Dictionary(Of String, List(Of NewMember)) =
            (From kvp In _d
             Let members = If(kvp.Value Is Nothing, Nothing, kvp.Value.Select(Function(s) New NewMember(s)).ToList())
             Select type = kvp.Key, members).ToDictionary(Function(tm) tm.type, Function(tm) tm.members)
        Return _d2
    End Function

    ' from https://martinsuchan.github.io/ApiPeek/Diffs/win10.10586.to.win10.14393.fulldiff.html
    Function GetUniversalApiAdditions14393() As Dictionary(Of String, List(Of NewMember))
        Static Dim _d As New Dictionary(Of String, List(Of String)) From {
            {"Windows.ApplicationModel.Activation.ActivationKind", "UserDataAccountsProvider", "FilePickerExperience"},
            {"Windows.ApplicationModel.Activation.AppointmentsProviderAddAppointmentActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.AppointmentsProviderRemoveAppointmentActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.AppointmentsProviderReplaceAppointmentActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.AppointmentsProviderShowAppointmentDetailsActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.AppointmentsProviderShowTimeFrameActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs", "TaskInstance"},
            {"Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.DeviceActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.DevicePairingActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.DialReceiverActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.FileActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.FileOpenPickerContinuationEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.FileSavePickerContinuationEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.FolderPickerContinuationEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.IActivatedEventArgsWithUser", "User"},
            {"Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs", "TaskInstance"},
            {"Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs2", "TileActivatedInfo"},
            {"Windows.ApplicationModel.Activation.IUserDataAccountProviderActivatedEventArgs", "Operation"},
            {"Windows.ApplicationModel.Activation.LaunchActivatedEventArgs", "TileActivatedInfo", "User"},
            {"Windows.ApplicationModel.Activation.LockScreenActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.ProtocolForResultsActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.RestrictedLaunchActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.SearchActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.TileActivatedInfo", "RecentlyShownNotifications"},
            {"Windows.ApplicationModel.Activation.ToastNotificationActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.UserDataAccountProviderActivatedEventArgs", "Kind", "Operation", "PreviousExecutionState", "SplashScreen"},
            {"Windows.ApplicationModel.Activation.VoiceCommandActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.Activation.WebAccountProviderActivatedEventArgs", "User"},
            {"Windows.ApplicationModel.AppExtensions"},
            {"Windows.ApplicationModel.AppExtensions.AppExtension", "AppInfo", "Description", "DisplayName", "GetExtensionPropertiesAsync", "GetPublicFolderAsync", "Id", "Package"},
            {"Windows.ApplicationModel.AppExtensions.AppExtensionCatalog", "FindAllAsync", "Open", "PackageInstalled", "PackageStatusChanged", "PackageUninstalling", "PackageUpdated", "PackageUpdating", "RequestRemovePackageAsync"},
            {"Windows.ApplicationModel.AppExtensions.AppExtensionPackageInstalledEventArgs", "AppExtensionName", "Extensions", "Package"},
            {"Windows.ApplicationModel.AppExtensions.AppExtensionPackageStatusChangedEventArgs", "AppExtensionName", "Package"},
            {"Windows.ApplicationModel.AppExtensions.AppExtensionPackageUninstallingEventArgs", "AppExtensionName", "Package"},
            {"Windows.ApplicationModel.AppExtensions.AppExtensionPackageUpdatedEventArgs", "AppExtensionName", "Extensions", "Package"},
            {"Windows.ApplicationModel.AppExtensions.AppExtensionPackageUpdatingEventArgs", "AppExtensionName", "Package"},
            {"Windows.ApplicationModel.Appointments.DataProvider"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarCancelMeetingRequest", "AppointmentCalendarLocalId", "AppointmentLocalId", "AppointmentOriginalStartTime", "Comment", "NotifyInvitees", "ReportCompletedAsync", "ReportFailedAsync", "Subject"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarCancelMeetingRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarCreateOrUpdateAppointmentRequest", "Appointment", "AppointmentCalendarLocalId", "ChangedProperties", "NotifyInvitees", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarForwardMeetingRequest", "AppointmentCalendarLocalId", "AppointmentLocalId", "AppointmentOriginalStartTime", "Comment", "ForwardHeader", "Invitees", "ReportCompletedAsync", "ReportFailedAsync", "Subject"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarForwardMeetingRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarProposeNewTimeForMeetingRequest", "AppointmentCalendarLocalId", "AppointmentLocalId", "AppointmentOriginalStartTime", "Comment", "NewDuration", "NewStartTime", "ReportCompletedAsync", "ReportFailedAsync", "Subject"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarSyncManagerSyncRequest", "AppointmentCalendarLocalId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarSyncManagerSyncRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarUpdateMeetingResponseRequest", "AppointmentCalendarLocalId", "AppointmentLocalId", "AppointmentOriginalStartTime", "Comment", "ReportCompletedAsync", "ReportFailedAsync", "Response", "SendUpdate", "Subject"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentCalendarUpdateMeetingResponseRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentDataProviderConnection", "CancelMeetingRequested", "CreateOrUpdateAppointmentRequested", "ForwardMeetingRequested", "ProposeNewTimeForMeetingRequested", "Start", "SyncRequested", "UpdateMeetingResponseRequested"},
            {"Windows.ApplicationModel.Appointments.DataProvider.AppointmentDataProviderTriggerDetails", "Connection"},
            {"Windows.ApplicationModel.Appointments.AppointmentCalendar", "RegisterSyncManagerAsync"},
            {"Windows.ApplicationModel.Appointments.AppointmentCalendarOtherAppReadAccess", "None"},
            {"Windows.ApplicationModel.Appointments.AppointmentCalendarOtherAppWriteAccess", "Limited"},
            {"Windows.ApplicationModel.Appointments.AppointmentManager", "GetForUser"},
            {"Windows.ApplicationModel.Appointments.AppointmentManagerForUser", "RequestStoreAsync", "ShowAddAppointmentAsync", "ShowAddAppointmentAsync", "ShowAppointmentDetailsAsync", "ShowAppointmentDetailsAsync", "ShowEditNewAppointmentAsync", "ShowRemoveAppointmentAsync", "ShowRemoveAppointmentAsync", "ShowRemoveAppointmentAsync", "ShowReplaceAppointmentAsync", "ShowReplaceAppointmentAsync", "ShowReplaceAppointmentAsync", "ShowTimeFrameAsync", "User"},
            {"Windows.ApplicationModel.AppService.AppServiceConnection", "OpenRemoteAsync", "User"},
            {"Windows.ApplicationModel.AppService.AppServiceConnectionStatus", "RemoteSystemUnavailable", "RemoteSystemNotSupportedByApp", "NotAuthorized"},
            {"Windows.ApplicationModel.AppService.AppServiceResponseStatus", "RemoteSystemUnavailable", "MessageSizeTooLarge"},
            {"Windows.ApplicationModel.AppService.AppServiceTriggerDetails", "IsRemoteSystemConnection"},
            {"Windows.ApplicationModel.Background.BackgroundAccessStatus", "AlwaysAllowed", "AllowedSubjectToSystemPolicy", "DeniedBySystemPolicy", "DeniedByUser"},
            {"Windows.ApplicationModel.Background.IBackgroundTaskInstance4", "User"},
            {"Windows.ApplicationModel.Background.SecondaryAuthenticationFactorAuthenticationTrigger"},
            {"Windows.ApplicationModel.Background.SocketActivityTrigger", "IsWakeFromLowPowerSupported"},
            {"Windows.ApplicationModel.Background.SystemTriggerType", "DefaultSignInAccountChange"},
            {"Windows.ApplicationModel.Background.UserNotificationChangedTrigger"},
            {"Windows.ApplicationModel.Calls.PhoneCallHistoryManager", "GetForUser"},
            {"Windows.ApplicationModel.Calls.PhoneCallHistoryManagerForUser", "RequestStoreAsync", "User"},
            {"Windows.ApplicationModel.Contacts.DataProvider"},
            {"Windows.ApplicationModel.Contacts.DataProvider.ContactDataProviderConnection", "ServerSearchReadBatchRequested", "Start", "SyncRequested"},
            {"Windows.ApplicationModel.Contacts.DataProvider.ContactDataProviderTriggerDetails", "Connection"},
            {"Windows.ApplicationModel.Contacts.DataProvider.ContactListServerSearchReadBatchRequest", "ContactListId", "Options", "ReportCompletedAsync", "ReportFailedAsync", "SaveContactAsync", "SessionId", "SuggestedBatchSize"},
            {"Windows.ApplicationModel.Contacts.DataProvider.ContactListServerSearchReadBatchRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Contacts.DataProvider.ContactListSyncManagerSyncRequest", "ContactListId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Contacts.DataProvider.ContactListSyncManagerSyncRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Contacts.AggregateContactManager", "SetRemoteIdentificationInformationAsync"},
            {"Windows.ApplicationModel.Contacts.ContactCardTabKind", "OrganizationalHierarchy"},
            {"Windows.ApplicationModel.Contacts.ContactList", "RegisterSyncManagerAsync"},
            {"Windows.ApplicationModel.Contacts.ContactListOtherAppReadAccess", "None"},
            {"Windows.ApplicationModel.Contacts.ContactListSyncConstraints", "CanSyncDescriptions", "MaxAnniversaryDates", "MaxAssistantPhoneNumbers", "MaxBirthdayDates", "MaxBusinessFaxPhoneNumbers", "MaxCompanyPhoneNumbers", "MaxHomeAddresses", "MaxHomeFaxPhoneNumbers", "MaxHomePhoneNumbers", "MaxChildRelationships", "MaxJobInfo", "MaxMobilePhoneNumbers", "MaxOtherAddresses", "MaxOtherDates", "MaxOtherEmailAddresses", "MaxOtherPhoneNumbers", "MaxOtherRelationships", "MaxPagerPhoneNumbers", "MaxParentRelationships", "MaxPartnerRelationships", "MaxPersonalEmailAddresses", "MaxRadioPhoneNumbers", "MaxSiblingRelationships", "MaxSpouseRelationships", "MaxWebsites", "MaxWorkAddresses", "MaxWorkEmailAddresses", "MaxWorkPhoneNumbers"},
            {"Windows.ApplicationModel.Contacts.ContactManager", "GetForUser"},
            {"Windows.ApplicationModel.Contacts.ContactManagerForUser", "ConvertContactToVCardAsync", "ConvertContactToVCardAsync", "ConvertVCardToContactAsync", "RequestAnnotationStoreAsync", "RequestStoreAsync", "SystemDisplayNameOrder", "SystemSortOrder", "User"},
            {"Windows.ApplicationModel.Core.CoreApplication", "BackgroundActivated", "EnablePrelaunch", "EnteredBackground", "LeavingBackground"},
            {"Windows.ApplicationModel.DataTransfer.DataTransferManager", "IsSupported"},
            {"Windows.ApplicationModel.Email.DataProvider"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection", "CreateFolderRequested", "DeleteFolderRequested", "DownloadAttachmentRequested", "DownloadMessageRequested", "EmptyFolderRequested", "ForwardMeetingRequested", "GetAutoReplySettingsRequested", "MailboxSyncRequested", "MoveFolderRequested", "ProposeNewTimeForMeetingRequested", "ResolveRecipientsRequested", "ServerSearchReadBatchRequested", "SetAutoReplySettingsRequested", "Start", "UpdateMeetingResponseRequested", "ValidateCertificatesRequested"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailDataProviderTriggerDetails", "Connection"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxCreateFolderRequest", "EmailMailboxId", "Name", "ParentFolderId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxCreateFolderRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxDeleteFolderRequest", "EmailFolderId", "EmailMailboxId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxDeleteFolderRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadAttachmentRequest", "EmailAttachmentId", "EmailMailboxId", "EmailMessageId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadAttachmentRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadMessageRequest", "EmailMailboxId", "EmailMessageId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadMessageRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxEmptyFolderRequest", "EmailFolderId", "EmailMailboxId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxEmptyFolderRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxForwardMeetingRequest", "Comment", "EmailMailboxId", "EmailMessageId", "ForwardHeader", "ForwardHeaderType", "Recipients", "ReportCompletedAsync", "ReportFailedAsync", "Subject"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxForwardMeetingRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxGetAutoReplySettingsRequest", "EmailMailboxId", "ReportCompletedAsync", "ReportFailedAsync", "RequestedFormat"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxGetAutoReplySettingsRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxMoveFolderRequest", "EmailFolderId", "EmailMailboxId", "NewFolderName", "NewParentFolderId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxMoveFolderRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxProposeNewTimeForMeetingRequest", "Comment", "EmailMailboxId", "EmailMessageId", "NewDuration", "NewStartTime", "ReportCompletedAsync", "ReportFailedAsync", "Subject"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxProposeNewTimeForMeetingRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxResolveRecipientsRequest", "EmailMailboxId", "Recipients", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxResolveRecipientsRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxServerSearchReadBatchRequest", "EmailFolderId", "EmailMailboxId", "Options", "ReportCompletedAsync", "ReportFailedAsync", "SaveMessageAsync", "SessionId", "SuggestedBatchSize"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxServerSearchReadBatchRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxSetAutoReplySettingsRequest", "AutoReplySettings", "EmailMailboxId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxSetAutoReplySettingsRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxSyncManagerSyncRequest", "EmailMailboxId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxSyncManagerSyncRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxUpdateMeetingResponseRequest", "Comment", "EmailMailboxId", "EmailMessageId", "ReportCompletedAsync", "ReportFailedAsync", "Response", "SendUpdate", "Subject"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxUpdateMeetingResponseRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxValidateCertificatesRequest", "Certificates", "EmailMailboxId", "ReportCompletedAsync", "ReportFailedAsync"},
            {"Windows.ApplicationModel.Email.DataProvider.EmailMailboxValidateCertificatesRequestEventArgs", "GetDeferral", "Request"},
            {"Windows.ApplicationModel.Email.EmailMailbox", "RegisterSyncManagerAsync"},
            {"Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess", "None"},
            {"Windows.ApplicationModel.Email.EmailManager", "GetForUser"},
            {"Windows.ApplicationModel.Email.EmailManagerForUser", "RequestStoreAsync", "ShowComposeNewEmailAsync", "User"},
            {"Windows.ApplicationModel.Email.EmailRecipientResolutionResult", "SetPublicKeys"},
            {"Windows.ApplicationModel.Chat.ChatConversation", "ItemKind"},
            {"Windows.ApplicationModel.Chat.ChatMessage", "ItemKind", "SyncId"},
            {"Windows.ApplicationModel.Chat.ChatMessageManager", "RequestSyncManagerAsync"},
            {"Windows.ApplicationModel.Chat.ChatMessageStore", "GetMessageBySyncIdAsync"},
            {"Windows.ApplicationModel.Chat.ChatMessageValidationStatus", "ValidWithLargeMessage", "VoiceRoamingRestriction", "DataRoamingRestriction"},
            {"Windows.ApplicationModel.Chat.ChatRestoreHistorySpan", "LastMonth", "LastYear", "AnyTime"},
            {"Windows.ApplicationModel.Chat.ChatSyncConfiguration", "IsSyncEnabled", "RestoreHistorySpan"},
            {"Windows.ApplicationModel.Chat.ChatSyncManager", "AssociateAccountAsync", "Configuration", "IsAccountAssociated", "SetConfigurationAsync", "StartSync", "UnassociateAccountAsync"},
            {"Windows.ApplicationModel.Preview"},
            {"Windows.ApplicationModel.Preview.Notes"},
            {"Windows.ApplicationModel.Preview.Notes.NotePlacementChangedPreviewEventArgs", "ViewId"},
            {"Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "GetForCurrentApp", "GetNotePlacement", "HideNote", "IsScreenLocked", "NotePlacementChanged", "NoteVisibilityChanged", "SetFocusToNextView", "SetNotesThumbnailAsync", "ShowNote", "ShowNoteRelativeTo", "ShowNoteWithPlacement", "SystemLockStateChanged", "TrySetNoteSize"},
            {"Windows.ApplicationModel.Preview.Notes.NoteVisibilityChangedPreviewEventArgs", "IsVisible", "ViewId"},
            {"Windows.ApplicationModel.Preview.Notes.PreviewNotesContract"},
            {"Windows.ApplicationModel.SocialInfo"},
            {"Windows.ApplicationModel.SocialInfo.Provider"},
            {"Windows.ApplicationModel.SocialInfo.Provider.SocialDashboardItemUpdater", "CommitAsync", "Content", "OwnerRemoteId", "TargetUri", "Thumbnail", "Timestamp"},
            {"Windows.ApplicationModel.SocialInfo.Provider.SocialFeedUpdater", "CommitAsync", "Items", "Kind", "OwnerRemoteId"},
            {"Windows.ApplicationModel.SocialInfo.Provider.SocialInfoProviderManager", "CreateDashboardItemUpdaterAsync", "CreateSocialFeedUpdaterAsync", "DeprovisionAsync", "ProvisionAsync", "ReportNewContentAvailable", "UpdateBadgeCountValue"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedContent", "Message", "TargetUri", "Title"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedChildItem", "Author", "PrimaryContent", "SecondaryContent", "SharedItem", "TargetUri", "Thumbnails", "Timestamp"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedItem", "Author", "BadgeCountValue", "BadgeStyle", "ChildItem", "PrimaryContent", "RemoteId", "SecondaryContent", "SharedItem", "Style", "TargetUri", "Thumbnails", "Timestamp"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedItemStyle", "Default", "Photo"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedKind", "HomeFeed", "ContactFeed", "Dashboard"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedSharedItem", "Content", "OriginalSource", "TargetUri", "Thumbnail", "Timestamp"},
            {"Windows.ApplicationModel.SocialInfo.SocialFeedUpdateMode", "Append", "Replace"},
            {"Windows.ApplicationModel.SocialInfo.SocialInfoContract"},
            {"Windows.ApplicationModel.SocialInfo.SocialItemBadgeStyle", "Hidden", "Visible", "VisibleWithCount"},
            {"Windows.ApplicationModel.SocialInfo.SocialItemThumbnail", "BitmapSize", "ImageUri", "SetImageAsync", "TargetUri"},
            {"Windows.ApplicationModel.SocialInfo.SocialUserInfo", "DisplayName", "RemoteId", "TargetUri", "UserName"},
            {"Windows.ApplicationModel.Store.LicenseManagement"},
            {"Windows.ApplicationModel.Store.LicenseManagement.LicenseManager", "AddLicenseAsync", "GetSatisfactionInfosAsync"},
            {"Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionInfo", "IsSatisfied", "SatisfiedByDevice", "SatisfiedByInstallMedia", "SatisfiedByOpenLicense", "SatisfiedByPass", "SatisfiedBySignedInUser", "SatisfiedByTrial"},
            {"Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult", "ExtendedError", "LicenseSatisfactionInfos"},
            {"Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "GetIsAppAllowedToInstallForUserAsync", "GetIsApplicableForUserAsync", "MoveToFrontOfDownloadQueue", "SearchForAllUpdatesForUserAsync", "SearchForUpdatesForUserAsync", "StartProductInstallAsync", "StartProductInstallForUserAsync", "UpdateAppByPackageFamilyNameForUserAsync"},
            {"Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus", "ReadyForLaunch", "User"},
            {"Windows.ApplicationModel.Store.Preview.StoreConfiguration", "GetPurchasePromptingPolicyForUser", "GetStoreLogDataAsync", "HasStoreWebAccount", "HasStoreWebAccountForUser", "IsStoreWebAccountIdForUser", "SetPurchasePromptingPolicyForUser", "SetStoreWebAccountIdForUser"},
            {"Windows.ApplicationModel.Store.Preview.StoreLogOptions", "None", "TryElevate"},
            {"Windows.ApplicationModel.Store.Preview.StoreSystemFeature", "Memory4GB", "Memory6GB", "Memory8GB", "Memory12GB", "Memory16GB", "Memory20GB", "VideoMemory2GB", "VideoMemory4GB", "VideoMemory6GB", "VideoMemory1GB"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.IUserDataAccountProviderOperation", "Kind"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.UserDataAccountPartnerAccountInfo", "AccountKind", "DisplayName", "Priority"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.UserDataAccountProviderAddAccountOperation", "ContentKinds", "Kind", "PartnerAccountInfos", "ReportCompleted"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.UserDataAccountProviderOperationKind", "AddAccount", "Settings", "ResolveErrors"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.UserDataAccountProviderPartnerAccountKind", "Exchange", "PopOrImap"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.UserDataAccountProviderResolveErrorsOperation", "Kind", "ReportCompleted", "UserDataAccountId"},
            {"Windows.ApplicationModel.UserDataAccounts.Provider.UserDataAccountProviderSettingsOperation", "Kind", "ReportCompleted", "UserDataAccountId"},
            {"Windows.ApplicationModel.UserDataAccounts.SystemAccess.DeviceAccountAuthenticationType", "Basic", "OAuth", "SingleSignOn"},
            {"Windows.ApplicationModel.UserDataAccounts.SystemAccess.DeviceAccountConfiguration", "AccountIconId", "AlwaysDownloadFullMessage", "AuthenticationCertificateId", "AuthenticationType", "AutoSelectAuthenticationCertificate", "CalDavRequiresSsl", "CalDavServerUrl", "CalDavSyncScheduleKind", "CardDavRequiresSsl", "CardDavServerUrl", "CardDavSyncScheduleKind", "DoesPolicyAllowMailSync", "IncomingServerCertificateHash", "IncomingServerCredential", "IsClientAuthenticationCertificateRequired", "IsExternallyManaged", "IsOutgoingServerAuthenticationEnabled", "IsOutgoingServerAuthenticationRequired", "IsSsoAuthenticationSupported", "IsSyncScheduleManagedBySystem", "MailAgeFilter", "OAuthRefreshToken", "OutgoingServerCertificateHash", "OutgoingServerCredential", "SsoAccountId", "SyncScheduleKind", "WasIncomingServerCertificateHashConfirmed", "WasModifiedByUser", "WasOutgoingServerCertificateHashConfirmed"},
            {"Windows.ApplicationModel.UserDataAccounts.SystemAccess.DeviceAccountIconId", "Exchange", "Msa", "Outlook", "Generic"},
            {"Windows.ApplicationModel.UserDataAccounts.SystemAccess.DeviceAccountMailAgeFilter", "All", "Last1Day", "Last3Days", "Last7Days", "Last14Days", "Last30Days", "Last90Days"},
            {"Windows.ApplicationModel.UserDataAccounts.SystemAccess.DeviceAccountSyncScheduleKind", "Manual", "Every15Minutes", "Every30Minutes", "Every60Minutes", "Every2Hours", "Daily", "AsItemsArrive"},
            {"Windows.ApplicationModel.UserDataAccounts.SystemAccess.UserDataAccountSystemAccessManager", "CreateDeviceAccountAsync", "DeleteDeviceAccountAsync", "GetDeviceAccountConfigurationAsync", "SuppressLocalAccountWithAccountAsync"},
            {"Windows.ApplicationModel.UserDataAccounts.UserDataAccount", "DisplayName", "ExplictReadAccessPackageFamilyNames"},
            {"Windows.ApplicationModel.UserDataAccounts.UserDataAccountManager", "GetForUser"},
            {"Windows.ApplicationModel.UserDataAccounts.UserDataAccountManagerForUser", "RequestStoreAsync", "User"},
            {"Windows.ApplicationModel.UserDataAccounts.UserDataAccountOtherAppReadAccess", "None"},
            {"Windows.ApplicationModel.UserDataAccounts.UserDataAccountStore", "CreateAccountAsync", "StoreChanged"},
            {"Windows.ApplicationModel.UserDataAccounts.UserDataAccountStoreChangedEventArgs", "GetDeferral"},
            {"Windows.ApplicationModel.EnteredBackgroundEventArgs", "GetDeferral"},
            {"Windows.ApplicationModel.FullTrustAppContract"},
            {"Windows.ApplicationModel.FullTrustProcessLauncher", "LaunchFullTrustProcessForAppAsync", "LaunchFullTrustProcessForAppAsync", "LaunchFullTrustProcessForCurrentAppAsync", "LaunchFullTrustProcessForCurrentAppAsync"},
            {"Windows.ApplicationModel.IEnteredBackgroundEventArgs", "GetDeferral"},
            {"Windows.ApplicationModel.ILeavingBackgroundEventArgs", "GetDeferral"},
            {"Windows.ApplicationModel.LeavingBackgroundEventArgs", "GetDeferral"},
            {"Windows.ApplicationModel.Package", "IsOptional", "SignatureKind", "VerifyContentIntegrityAsync"},
            {"Windows.ApplicationModel.PackageCatalog", "OpenForCurrentPackage", "OpenForCurrentUser", "PackageInstalling", "PackageStaging", "PackageStatusChanged", "PackageUninstalling", "PackageUpdating"},
            {"Windows.ApplicationModel.PackageInstallingEventArgs", "ActivityId", "ErrorCode", "IsComplete", "Package", "Progress"},
            {"Windows.ApplicationModel.PackageSignatureKind", "None", "Developer", "Enterprise", "Store", "System"},
            {"Windows.ApplicationModel.PackageStagingEventArgs", "ActivityId", "ErrorCode", "IsComplete", "Package", "Progress"},
            {"Windows.ApplicationModel.PackageStatusChangedEventArgs", "Package"},
            {"Windows.ApplicationModel.PackageUninstallingEventArgs", "ActivityId", "ErrorCode", "IsComplete", "Package", "Progress"},
            {"Windows.ApplicationModel.PackageUpdatingEventArgs", "ActivityId", "ErrorCode", "IsComplete", "Progress", "SourcePackage", "TargetPackage"},
            {"Windows.ApplicationModel.StartupTask", "Disable", "GetAsync", "GetForCurrentPackageAsync", "RequestEnableAsync", "State", "TaskId"},
            {"Windows.ApplicationModel.StartupTaskContract"},
            {"Windows.ApplicationModel.StartupTaskState", "Disabled", "DisabledByUser", "Enabled"},
            {"Windows.Data.Text.TextPhoneme", "DisplayText", "ReadingText"},
            {"Windows.Data.Text.TextReverseConversionGenerator", "GetPhonemesAsync"},
            {"Windows.Devices.AllJoyn.AllJoynAuthenticationMechanism", "EcdheSpeke"},
            {"Windows.Devices.AllJoyn.AllJoynBusAttachment", "AcceptSessionJoinerRequested", "GetAboutDataAsync", "GetAboutDataAsync", "GetDefault", "GetWatcher", "SessionJoined"},
            {"Windows.Devices.AllJoyn.AllJoynBusObject", "AddProducer", "BusAttachment", "Session", "Start", "Stop", "Stopped"},
            {"Windows.Devices.AllJoyn.AllJoynBusObjectStoppedEventArgs", "Status"},
            {"Windows.Devices.AllJoyn.AllJoynServiceInfo", "FromIdAsync"},
            {"Windows.Devices.AllJoyn.AllJoynSession", "GetFromServiceInfoAsync", "GetFromServiceInfoAsync", "Id", "Lost", "MemberAdded", "MemberRemoved", "RemoveMemberAsync", "Status"},
            {"Windows.Devices.AllJoyn.AllJoynSessionJoinedEventArgs", "Session"},
            {"Windows.Devices.AllJoyn.IAllJoynProducer", "SetBusObject"},
            {"Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService", "DeviceAccessInformation", "GetDeviceSelectorForBluetoothDevice", "GetDeviceSelectorForBluetoothDevice", "GetDeviceSelectorForBluetoothDeviceAndServiceId", "GetDeviceSelectorForBluetoothDeviceAndServiceId", "RequestAccessAsync"},
            {"Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult", "Error", "Services"},
            {"Windows.Devices.Bluetooth.BluetoothDevice", "DeviceAccessInformation", "GetRfcommServicesAsync", "GetRfcommServicesAsync", "GetRfcommServicesForIdAsync", "GetRfcommServicesForIdAsync", "RequestAccessAsync"},
            {"Windows.Devices.Bluetooth.BluetoothError", "ConsentRequired"},
            {"Windows.Devices.Enumeration.DeviceAccessChangedEventArgs", "Id"},
            {"Windows.Devices.Enumeration.EnclosureLocation", "RotationAngleInDegreesClockwise"},
            {"Windows.Devices.Geolocation.Geolocator", "AllowFallbackToConsentlessPositions", "DefaultGeoposition", "IsDefaultGeopositionRecommended"},
            {"Windows.Devices.Geolocation.PositionSource", "Default", "Obfuscated"},
            {"Windows.Devices.HumanInterfaceDevice.HidBooleanControlDescription", "IsAbsolute"},
            {"Windows.Devices.Midi.MidiMessageType", "EndSystemExclusive"},
            {"Windows.Devices.PointOfService.BarcodeScanner", "VideoDeviceId"},
            {"Windows.Devices.Printers.Extensions.Print3DWorkflow", "PrinterChanged"},
            {"Windows.Devices.Printers.Extensions.Print3DWorkflowPrinterChangedEventArgs", "NewDeviceId"},
            {"Windows.Devices.Sensors.Accelerometer", "GetDefault", "ReadingType"},
            {"Windows.Devices.Sensors.AccelerometerReadingType", "Standard", "Linear", "Gravity"},
            {"Windows.Devices.Sensors.Inclinometer", "GetDefault"},
            {"Windows.Devices.Sensors.OrientationSensor", "GetDefault", "GetDefault"},
            {"Windows.Devices.Sensors.SensorOptimizationGoal", "Precision", "PowerEfficiency"},
            {"Windows.Devices.SmartCards.SmartCardReaderKind", "EmbeddedSE"},
            {"Windows.Devices.WiFi.WiFiPhyKind", "Dmg"},
            {"Windows.Foundation.Metadata.CreateFromStringAttribute"},
            {"Windows.Foundation.Metadata.CreateFromStringAttribute.MethodName"},
            {"Windows.Gaming.Input.Custom"},
            {"Windows.Gaming.Input.Custom.GameControllerFactoryManager", "RegisterCustomFactoryForGipInterface", "RegisterCustomFactoryForHardwareId", "RegisterCustomFactoryForXusbType"},
            {"Windows.Gaming.Input.Custom.GameControllerVersionInfo"},
            {"Windows.Gaming.Input.Custom.GameControllerVersionInfo.Build"},
            {"Windows.Gaming.Input.Custom.GameControllerVersionInfo.Major"},
            {"Windows.Gaming.Input.Custom.GameControllerVersionInfo.Minor"},
            {"Windows.Gaming.Input.Custom.GameControllerVersionInfo.Revision"},
            {"Windows.Gaming.Input.Custom.GipFirmwareUpdateProgress"},
            {"Windows.Gaming.Input.Custom.GipFirmwareUpdateProgress.CurrentComponentId"},
            {"Windows.Gaming.Input.Custom.GipFirmwareUpdateProgress.PercentCompleted"},
            {"Windows.Gaming.Input.Custom.GipFirmwareUpdateResult", "ExtendedErrorCode", "FinalComponentId", "Status"},
            {"Windows.Gaming.Input.Custom.GipFirmwareUpdateStatus", "Completed", "UpToDate", "Failed"},
            {"Windows.Gaming.Input.Custom.GipGameControllerProvider", "FirmwareVersionInfo", "HardwareProductId", "HardwareVendorId", "HardwareVersionInfo", "IsConnected", "SendMessage", "SendReceiveMessage", "UpdateFirmwareAsync"},
            {"Windows.Gaming.Input.Custom.GipMessageClass", "Command", "LowLatency", "StandardLatency"},
            {"Windows.Gaming.Input.Custom.ICustomGameControllerFactory", "CreateGameController", "OnGameControllerAdded", "OnGameControllerRemoved"},
            {"Windows.Gaming.Input.Custom.IGameControllerInputSink", "OnInputResumed", "OnInputSuspended"},
            {"Windows.Gaming.Input.Custom.IGameControllerProvider", "FirmwareVersionInfo", "HardwareProductId", "HardwareVendorId", "HardwareVersionInfo", "IsConnected"},
            {"Windows.Gaming.Input.Custom.IGipGameControllerInputSink", "OnKeyReceived", "OnMessageReceived"},
            {"Windows.Gaming.Input.Custom.IXusbGameControllerInputSink", "OnInputReceived"},
            {"Windows.Gaming.Input.Custom.XusbDeviceSubtype", "Unknown", "Gamepad", "ArcadePad", "ArcadeStick", "FlightStick", "Wheel", "Guitar", "GuitarAlternate", "GuitarBass", "DrumKit", "DancePad"},
            {"Windows.Gaming.Input.Custom.XusbDeviceType", "Unknown", "Gamepad"},
            {"Windows.Gaming.Input.Custom.XusbGameControllerProvider", "FirmwareVersionInfo", "HardwareProductId", "HardwareVendorId", "HardwareVersionInfo", "IsConnected", "SetVibration"},
            {"Windows.Gaming.Input.ForceFeedback"},
            {"Windows.Gaming.Input.ForceFeedback.ConditionForceEffect", "Gain", "Kind", "SetParameters", "Start", "State", "Stop"},
            {"Windows.Gaming.Input.ForceFeedback.ConditionForceEffectKind", "Spring", "Damper", "Inertia", "Friction"},
            {"Windows.Gaming.Input.ForceFeedback.ConstantForceEffect", "Gain", "SetParameters", "SetParametersWithEnvelope", "Start", "State", "Stop"},
            {"Windows.Gaming.Input.ForceFeedback.ForceFeedbackEffectAxes", "None", "X", "Y", "Z"},
            {"Windows.Gaming.Input.ForceFeedback.ForceFeedbackEffectState", "Stopped", "Running", "Paused", "Faulted"},
            {"Windows.Gaming.Input.ForceFeedback.ForceFeedbackLoadEffectResult", "Succeeded", "EffectStorageFull", "EffectNotSupported"},
            {"Windows.Gaming.Input.ForceFeedback.ForceFeedbackMotor", "AreEffectsPaused", "IsEnabled", "LoadEffectAsync", "MasterGain", "PauseAllEffects", "ResumeAllEffects", "StopAllEffects", "SupportedAxes", "TryDisableAsync", "TryEnableAsync", "TryResetAsync", "TryUnloadEffectAsync"},
            {"Windows.Gaming.Input.ForceFeedback.IForceFeedbackEffect", "Gain", "Start", "State", "Stop"},
            {"Windows.Gaming.Input.ForceFeedback.PeriodicForceEffect", "Gain", "Kind", "SetParameters", "SetParametersWithEnvelope", "Start", "State", "Stop"},
            {"Windows.Gaming.Input.ForceFeedback.PeriodicForceEffectKind", "SquareWave", "SineWave", "TriangleWave", "SawtoothWaveUp", "SawtoothWaveDown"},
            {"Windows.Gaming.Input.ForceFeedback.RampForceEffect", "Gain", "SetParameters", "SetParametersWithEnvelope", "Start", "State", "Stop"},
            {"Windows.Gaming.Input.ArcadeStick", "ArcadeStickAdded", "ArcadeStickRemoved", "ArcadeSticks", "GetButtonLabel", "GetCurrentReading", "Headset", "HeadsetConnected", "HeadsetDisconnected", "IsWireless", "User", "UserChanged"},
            {"Windows.Gaming.Input.ArcadeStickButtons", "None", "StickUp", "StickDown", "StickLeft", "StickRight", "Action1", "Action2", "Action3", "Action4", "Action5", "Action6", "Special1", "Special2"},
            {"Windows.Gaming.Input.ArcadeStickReading"},
            {"Windows.Gaming.Input.ArcadeStickReading.Buttons"},
            {"Windows.Gaming.Input.ArcadeStickReading.Timestamp"},
            {"Windows.Gaming.Input.GameControllerButtonLabel", "None", "XboxBack", "XboxStart", "XboxMenu", "XboxView", "XboxUp", "XboxDown", "XboxLeft", "XboxRight", "XboxA", "XboxB", "XboxX", "XboxY", "XboxLeftBumper", "XboxLeftTrigger", "XboxLeftStickButton", "XboxRightBumper", "XboxRightTrigger", "XboxRightStickButton", "XboxPaddle1", "XboxPaddle2", "XboxPaddle3", "XboxPaddle4", "Mode", "Select", "Menu", "View", "Back", "Start", "Options", "Share", "Up", "Down", "Left", "Right", "LetterA", "LetterB", "LetterC", "LetterL", "LetterR", "LetterX", "LetterY", "LetterZ", "Cross", "Circle", "Square", "Triangle", "LeftBumper", "LeftTrigger", "LeftStickButton", "Left1", "Left2", "Left3", "RightBumper", "RightTrigger", "RightStickButton", "Right1", "Right2", "Right3", "Paddle1", "Paddle2", "Paddle3", "Paddle4", "Plus", "Minus", "DownLeftArrow", "DialLeft", "DialRight", "Suspension"},
            {"Windows.Gaming.Input.Gamepad", "GetButtonLabel"},
            {"Windows.Gaming.Input.GamepadButtons", "Paddle1", "Paddle2", "Paddle3", "Paddle4"},
            {"Windows.Gaming.Input.OptionalUINavigationButtons", "None", "Context1", "Context2", "Context3", "Context4", "PageUp", "PageDown", "PageLeft", "PageRight", "ScrollUp", "ScrollDown", "ScrollLeft", "ScrollRight"},
            {"Windows.Gaming.Input.RacingWheel", "GetButtonLabel", "GetCurrentReading", "HasClutch", "HasHandbrake", "HasPatternShifter", "Headset", "HeadsetConnected", "HeadsetDisconnected", "IsWireless", "MaxPatternShifterGear", "MaxWheelAngle", "RacingWheelAdded", "RacingWheelRemoved", "RacingWheels", "User", "UserChanged", "WheelMotor"},
            {"Windows.Gaming.Input.RacingWheelButtons", "None", "PreviousGear", "NextGear", "DPadUp", "DPadDown", "DPadLeft", "DPadRight", "Button1", "Button2", "Button3", "Button4", "Button5", "Button6", "Button7", "Button8", "Button9", "Button10", "Button11", "Button12", "Button13", "Button14", "Button15", "Button16"},
            {"Windows.Gaming.Input.RacingWheelReading"},
            {"Windows.Gaming.Input.RacingWheelReading.Brake"},
            {"Windows.Gaming.Input.RacingWheelReading.Buttons"},
            {"Windows.Gaming.Input.RacingWheelReading.Clutch"},
            {"Windows.Gaming.Input.RacingWheelReading.Handbrake"},
            {"Windows.Gaming.Input.RacingWheelReading.PatternShifterGear"},
            {"Windows.Gaming.Input.RacingWheelReading.Throttle"},
            {"Windows.Gaming.Input.RacingWheelReading.Timestamp"},
            {"Windows.Gaming.Input.RacingWheelReading.Wheel"},
            {"Windows.Gaming.Input.RequiredUINavigationButtons", "None", "Menu", "View", "Accept", "Cancel", "Up", "Down", "Left", "Right"},
            {"Windows.Gaming.Input.UINavigationController", "GetCurrentReading", "GetOptionalButtonLabel", "GetRequiredButtonLabel", "Headset", "HeadsetConnected", "HeadsetDisconnected", "IsWireless", "UINavigationControllerAdded", "UINavigationControllerRemoved", "UINavigationControllers", "User", "UserChanged"},
            {"Windows.Gaming.Input.UINavigationReading"},
            {"Windows.Gaming.Input.UINavigationReading.OptionalButtons"},
            {"Windows.Gaming.Input.UINavigationReading.RequiredButtons"},
            {"Windows.Gaming.Input.UINavigationReading.Timestamp"},
            {"Windows.Globalization.PhoneNumberFormatting"},
            {"Windows.Globalization.PhoneNumberFormatting.PhoneNumberFormat", "E164", "International", "National", "Rfc3966"},
            {"Windows.Globalization.PhoneNumberFormatting.PhoneNumberFormatter", "Format", "Format", "FormatPartialString", "FormatString", "FormatStringWithLeftToRightMarkers", "GetCountryCodeForRegion", "GetNationalDirectDialingPrefixForRegion", "TryCreate", "WrapWithLeftToRightMarkers"},
            {"Windows.Globalization.PhoneNumberFormatting.PhoneNumberInfo", "CountryCode", "GetGeographicRegionCode", "GetLengthOfGeographicalAreaCode", "GetLengthOfNationalDestinationCode", "GetNationalSignificantNumber", "CheckNumberMatch", "PhoneNumber", "PredictNumberKind", "TryParse", "TryParse"},
            {"Windows.Globalization.PhoneNumberFormatting.PhoneNumberMatchResult", "NoMatch", "ShortNationalSignificantNumberMatch", "NationalSignificantNumberMatch", "ExactMatch"},
            {"Windows.Globalization.PhoneNumberFormatting.PhoneNumberParseResult", "Valid", "NotANumber", "InvalidCountryCode", "TooShort", "TooLong"},
            {"Windows.Globalization.PhoneNumberFormatting.PredictedPhoneNumberKind", "FixedLine", "Mobile", "FixedLineOrMobile", "TollFree", "PremiumRate", "SharedCost", "Voip", "PersonalNumber", "Pager", "UniversalAccountNumber", "Voicemail", "Unknown"},
            {"Windows.Globalization.CalendarIdentifiers", "ChineseLunar", "JapaneseLunar", "KoreanLunar", "TaiwanLunar", "VietnameseLunar"},
            {"Windows.Graphics.Display.DisplayInformation", "ScreenHeightInRawPixels", "ScreenWidthInRawPixels"},
            {"Windows.Graphics.Printing.OptionDetails.PrintBorderingOptionDetails", "ErrorText", "Items", "OptionId", "OptionType", "State", "TrySetValue", "Value"},
            {"Windows.Graphics.Printing.PrintBordering", "Default", "NotAvailable", "PrinterCustom", "Bordered", "Borderless"},
            {"Windows.Graphics.Printing.PrintManager", "IsSupported"},
            {"Windows.Graphics.Printing.PrintPageInfo", "DpiX", "DpiY", "MediaSize", "Orientation", "PageSize"},
            {"Windows.Graphics.Printing.PrintTask", "IsPreviewEnabled"},
            {"Windows.Graphics.Printing.PrintTaskOptions", "Bordering", "GetPagePrintTicket"},
            {"Windows.Graphics.Printing.StandardPrintTaskOptions", "Bordering"},
            {"Windows.Graphics.Printing3D.Printing3DCompositeMaterialGroup", "BaseMaterialGroup"},
            {"Windows.Graphics.Printing3D.Printing3DFaceReductionOptions", "MaxEdgeLength", "MaxReductionArea", "TargetTriangleCount"},
            {"Windows.Graphics.Printing3D.Printing3DModel", "RepairWithProgressAsync", "TryPartialRepairAsync", "TryPartialRepairAsync", "TryReduceFacesAsync", "TryReduceFacesAsync", "TryReduceFacesAsync"},
            {"Windows.Management.Deployment.PackageManager", "GetPackageVolumesAsync"},
            {"Windows.Management.Deployment.PackageTypes", "Optional"},
            {"Windows.Management.Deployment.PackageVolume", "GetAvailableSpaceAsync", "IsAppxInstallSupported", "IsFullTrustPackageSupported"},
            {"Windows.Management.Workplace.MdmPolicy", "GetMessagingSyncPolicy"},
            {"Windows.Management.Workplace.MessagingSyncPolicy", "Disallowed", "Allowed", "Required"},
            {"Windows.Media.Audio.AudioDeviceInputNode", "Emitter"},
            {"Windows.Media.Audio.AudioDeviceOutputNode", "Listener"},
            {"Windows.Media.Audio.AudioFileInputNode", "Emitter"},
            {"Windows.Media.Audio.AudioFrameInputNode", "Emitter"},
            {"Windows.Media.Audio.AudioGraph", "CreateBatchUpdater", "CreateDeviceInputNodeAsync", "CreateFileInputNodeAsync", "CreateFrameInputNode", "CreateSubmixNode"},
            {"Windows.Media.Audio.AudioGraphBatchUpdater", "Dispose"},
            {"Windows.Media.Audio.AudioNodeEmitter", "DecayModel", "Direction", "DistanceScale", "DopplerScale", "DopplerVelocity", "Gain", "IsDopplerDisabled", "Position", "Shape", "SpatialAudioModel"},
            {"Windows.Media.Audio.AudioNodeEmitterConeProperties", "InnerAngle", "OuterAngle", "OuterAngleGain"},
            {"Windows.Media.Audio.AudioNodeEmitterDecayKind", "Natural", "Custom"},
            {"Windows.Media.Audio.AudioNodeEmitterDecayModel", "CreateCustom", "CreateNatural", "Kind", "MaxGain", "MinGain", "NaturalProperties"},
            {"Windows.Media.Audio.AudioNodeEmitterNaturalDecayModelProperties", "CutoffDistance", "UnityGainDistance"},
            {"Windows.Media.Audio.AudioNodeEmitterSettings", "None", "DisableDoppler"},
            {"Windows.Media.Audio.AudioNodeEmitterShape", "ConeProperties", "CreateCone", "CreateOmnidirectional", "Kind"},
            {"Windows.Media.Audio.AudioNodeEmitterShapeKind", "Omnidirectional", "Cone"},
            {"Windows.Media.Audio.AudioNodeListener", "DopplerVelocity", "Orientation", "Position", "SpeedOfSound"},
            {"Windows.Media.Audio.AudioSubmixNode", "Emitter"},
            {"Windows.Media.Audio.IAudioInputNode2", "Emitter"},
            {"Windows.Media.Audio.IAudioNodeWithListener", "Listener"},
            {"Windows.Media.Audio.SpatialAudioModel", "ObjectBased", "FoldDown"},
            {"Windows.Media.Capture.Frames"},
            {"Windows.Media.Capture.Frames.BufferMediaFrame", "Buffer", "FrameReference"},
            {"Windows.Media.Capture.Frames.DepthMediaFrame", "DepthFormat", "FrameReference", "TryCreateCoordinateMapper", "VideoMediaFrame"},
            {"Windows.Media.Capture.Frames.DepthMediaFrameFormat", "DepthScaleInMeters", "VideoFormat"},
            {"Windows.Media.Capture.Frames.InfraredMediaFrame", "FrameReference", "IsIlluminated", "VideoMediaFrame"},
            {"Windows.Media.Capture.Frames.MediaFrameArrivedEventArgs"},
            {"Windows.Media.Capture.Frames.MediaFrameFormat", "FrameRate", "MajorType", "Properties", "Subtype", "VideoFormat"},
            {"Windows.Media.Capture.Frames.MediaFrameReader", "Dispose", "FrameArrived", "StartAsync", "StopAsync", "TryAcquireLatestFrame"},
            {"Windows.Media.Capture.Frames.MediaFrameReaderStartStatus", "Success", "UnknownFailure", "DeviceNotAvailable", "OutputFormatNotSupported"},
            {"Windows.Media.Capture.Frames.MediaFrameReference", "BufferMediaFrame", "CoordinateSystem", "Dispose", "Duration", "Format", "Properties", "SourceKind", "SystemRelativeTime", "VideoMediaFrame"},
            {"Windows.Media.Capture.Frames.MediaFrameSource", "Controller", "CurrentFormat", "FormatChanged", "Info", "SetFormatAsync", "SupportedFormats", "TryGetCameraIntrinsics"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceController", "GetPropertyAsync", "SetPropertyAsync", "VideoDeviceController"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceGetPropertyResult", "Status", "Value"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceGetPropertyStatus", "Success", "UnknownFailure", "NotSupported", "DeviceNotAvailable"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceGroup", "DisplayName", "FindAllAsync", "FromIdAsync", "GetDeviceSelector", "Id", "SourceInfos"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceInfo", "CoordinateSystem", "DeviceInformation", "Id", "MediaStreamType", "Properties", "SourceGroup", "SourceKind"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceKind", "Custom", "Color", "Infrared", "Depth"},
            {"Windows.Media.Capture.Frames.MediaFrameSourceSetPropertyStatus", "Success", "UnknownFailure", "NotSupported", "InvalidValue", "DeviceNotAvailable", "NotInControl"},
            {"Windows.Media.Capture.Frames.VideoMediaFrame", "CameraIntrinsics", "DepthMediaFrame", "Direct3DSurface", "FrameReference", "GetVideoFrame", "InfraredMediaFrame", "SoftwareBitmap", "VideoFormat"},
            {"Windows.Media.Capture.Frames.VideoMediaFrameFormat", "DepthFormat", "Height", "MediaFrameFormat", "Width"},
            {"Windows.Media.Capture.AdvancedCapturedPhoto", "FrameBoundsRelativeToReferencePhoto"},
            {"Windows.Media.Capture.AppCaptureAlternateShortcutKeys", "ToggleBroadcastKey", "ToggleBroadcastKeyModifiers", "ToggleCameraCaptureKey", "ToggleCameraCaptureKeyModifiers"},
            {"Windows.Media.Capture.AppCaptureSettings", "IsMicrophoneCaptureEnabledByDefault", "MicrophoneGain", "SystemAudioGain", "VideoEncodingFrameRateMode"},
            {"Windows.Media.Capture.AppCaptureVideoEncodingFrameRateMode", "Standard", "High"},
            {"Windows.Media.Capture.LowLagMediaRecording", "PauseWithResultAsync", "StopWithResultAsync"},
            {"Windows.Media.Capture.MediaCapture", "CreateFrameReaderAsync", "CreateFrameReaderAsync", "CreateFrameReaderAsync", "FrameSources", "PauseRecordWithResultAsync", "RemoveEffectAsync", "StopRecordWithResultAsync"},
            {"Windows.Media.Capture.MediaCaptureInitializationSettings", "MemoryPreference", "SharingMode", "SourceGroup"},
            {"Windows.Media.Capture.MediaCaptureMemoryPreference", "Auto", "Cpu"},
            {"Windows.Media.Capture.MediaCapturePauseResult", "Dispose", "LastFrame", "RecordDuration"},
            {"Windows.Media.Capture.MediaCaptureSharingMode", "ExclusiveControl", "SharedReadOnly"},
            {"Windows.Media.Capture.MediaCaptureStopResult", "Dispose", "LastFrame", "RecordDuration"},
            {"Windows.Media.Capture.PowerlineFrequency", "Auto"},
            {"Windows.Media.Core.AudioDecoderDegradation", "None", "DownmixTo2Channels", "DownmixTo6Channels", "DownmixTo8Channels"},
            {"Windows.Media.Core.AudioDecoderDegradationReason", "None", "LicensingRequirement"},
            {"Windows.Media.Core.AudioStreamDescriptor", "LeadingEncoderPadding", "TrailingEncoderPadding"},
            {"Windows.Media.Core.AudioTrack", "GetEncodingProperties", "Name", "OpenFailed", "PlaybackItem", "SupportInfo"},
            {"Windows.Media.Core.AudioTrackOpenFailedEventArgs", "ExtendedError"},
            {"Windows.Media.Core.AudioTrackSupportInfo", "DecoderStatus", "Degradation", "DegradationReason", "MediaSourceStatus"},
            {"Windows.Media.Core.MediaDecoderStatus", "FullySupported", "UnsupportedSubtype", "UnsupportedEncoderProperties", "Degraded"},
            {"Windows.Media.Core.MediaSourceStatus", "FullySupported", "Unknown"},
            {"Windows.Media.Core.MediaStreamSource", "SampleRendered"},
            {"Windows.Media.Core.MediaStreamSourceSampleRenderedEventArgs", "SampleLag"},
            {"Windows.Media.Core.TimedMetadataTrack", "Name", "PlaybackItem"},
            {"Windows.Media.Core.VideoTrack", "GetEncodingProperties", "Name", "OpenFailed", "PlaybackItem", "SupportInfo"},
            {"Windows.Media.Core.VideoTrackOpenFailedEventArgs", "ExtendedError"},
            {"Windows.Media.Core.VideoTrackSupportInfo", "DecoderStatus", "MediaSourceStatus"},
            {"Windows.Media.Devices.Core.CameraIntrinsics", "DistortPoint", "DistortPoints", "UndistortedProjectionTransform", "UndistortPoint", "UndistortPoints"},
            {"Windows.Media.Devices.Core.DepthCorrelatedCoordinateMapper", "Dispose", "MapPoint", "MapPoints", "UnprojectPoint", "UnprojectPoints"},
            {"Windows.Media.Devices.AdvancedPhotoMode", "LowLight"},
            {"Windows.Media.Import.PhotoImportFindItemsResult", "AddItemsInDateRangeToSelection"},
            {"Windows.Media.Import.PhotoImportSession", "RememberDeselectedItems", "SubfolderDateFormat"},
            {"Windows.Media.Import.PhotoImportSubfolderDateFormat", "Year", "YearMonth", "YearMonthDay"},
            {"Windows.Media.MediaProperties.StereoscopicVideoPackingMode", "None", "SideBySide", "TopBottom"},
            {"Windows.Media.MediaProperties.VideoEncodingProperties", "StereoscopicVideoPackingMode"},
            {"Windows.Media.Playback.MediaBreak", "CanStart", "CustomProperties", "InsertionMethod", "PlaybackList", "PresentationPosition"},
            {"Windows.Media.Playback.MediaBreakEndedEventArgs", "MediaBreak"},
            {"Windows.Media.Playback.MediaBreakInsertionMethod", "Interrupt", "Replace"},
            {"Windows.Media.Playback.MediaBreakManager", "BreakEnded", "BreakSkipped", "BreaksSeekedOver", "BreakStarted", "CurrentBreak", "PlaybackSession", "PlayBreak", "SkipCurrentBreak"},
            {"Windows.Media.Playback.MediaBreakSeekedOverEventArgs", "NewPosition", "OldPosition", "SeekedOverBreaks"},
            {"Windows.Media.Playback.MediaBreakSchedule", "InsertMidrollBreak", "MidrollBreaks", "PlaybackItem", "PostrollBreak", "PrerollBreak", "RemoveMidrollBreak", "ScheduleChanged"},
            {"Windows.Media.Playback.MediaBreakSkippedEventArgs", "MediaBreak"},
            {"Windows.Media.Playback.MediaBreakStartedEventArgs", "MediaBreak"},
            {"Windows.Media.Playback.MediaCommandEnablingRule", "Auto", "Always", "Never"},
            {"Windows.Media.Playback.MediaItemDisplayProperties", "ClearAll", "MusicProperties", "Thumbnail", "Type", "VideoProperties"},
            {"Windows.Media.Playback.MediaPlaybackCommandManager", "AutoRepeatModeBehavior", "AutoRepeatModeReceived", "FastForwardBehavior", "FastForwardReceived", "IsEnabled", "MediaPlayer", "NextBehavior", "NextReceived", "PauseBehavior", "PauseReceived", "PlayBehavior", "PlayReceived", "PositionBehavior", "PositionReceived", "PreviousBehavior", "PreviousReceived", "RateBehavior", "RateReceived", "RewindBehavior", "RewindReceived", "ShuffleBehavior", "ShuffleReceived"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs", "AutoRepeatMode", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior", "CommandManager", "EnablingRule", "IsEnabled", "IsEnabledChanged"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerFastForwardReceivedEventArgs", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerNextReceivedEventArgs", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerPauseReceivedEventArgs", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerPlayReceivedEventArgs", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerPositionReceivedEventArgs", "GetDeferral", "Handled", "Position"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerPreviousReceivedEventArgs", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerRateReceivedEventArgs", "GetDeferral", "Handled", "PlaybackRate"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerRewindReceivedEventArgs", "GetDeferral", "Handled"},
            {"Windows.Media.Playback.MediaPlaybackCommandManagerShuffleReceivedEventArgs", "GetDeferral", "Handled", "IsShuffleRequested"},
            {"Windows.Media.Playback.MediaPlaybackItem", "ApplyDisplayProperties", "BreakSchedule", "CanSkip", "DurationLimit", "GetDisplayProperties", "StartTime"},
            {"Windows.Media.Playback.MediaPlaybackSession", "BufferingEnded", "BufferingProgress", "BufferingProgressChanged", "BufferingStarted", "CanPause", "CanSeek", "DownloadProgress", "DownloadProgressChanged", "IsProtected", "MediaPlayer", "NaturalDuration", "NaturalDurationChanged", "NaturalVideoHeight", "NaturalVideoSizeChanged", "NaturalVideoWidth", "NormalizedSourceRect", "PlaybackRate", "PlaybackRateChanged", "PlaybackState", "PlaybackStateChanged", "Position", "PositionChanged", "SeekCompleted", "StereoscopicVideoPackingMode"},
            {"Windows.Media.Playback.MediaPlaybackState", "None", "Opening", "Buffering", "Playing", "Paused"},
            {"Windows.Media.Playback.MediaPlayer", "AddVideoEffect", "AudioBalance", "AudioDevice", "BreakManager", "CommandManager", "Dispose", "GetAsCastingSource", "GetSurface", "IsMutedChanged", "PlaybackSession", "RealTimePlayback", "SetSurfaceSize", "SourceChanged", "StepBackwardOneFrame", "StepForwardOneFrame", "StereoscopicVideoRenderMode", "TimelineController", "TimelineControllerPositionOffset"},
            {"Windows.Media.Playback.MediaPlayerSurface", "CompositionSurface", "Compositor", "Dispose", "MediaPlayer"},
            {"Windows.Media.Playback.StereoscopicVideoRenderMode", "Mono", "Stereo"},
            {"Windows.Media.Protection.PlayReady.PlayReadyLicenseAcquisitionServiceRequest", "SessionId"},
            {"Windows.Media.Protection.PlayReady.PlayReadyStatics", "InputTrustAuthorityToCreate", "ProtectionSystemId"},
            {"Windows.Media.Protection.HdcpProtection", "Off", "On", "OnWithTypeEnforcement"},
            {"Windows.Media.Protection.HdcpSession", "Dispose", "GetEffectiveProtection", "IsEffectiveProtectionAtLeast", "ProtectionChanged", "SetDesiredMinProtectionAsync"},
            {"Windows.Media.Protection.HdcpSetProtectionResult", "Success", "TimedOut", "NotSupported", "UnknownFailure"},
            {"Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceDownloadResult", "ResourceByteRangeLength", "ResourceByteRangeOffset"},
            {"Windows.Media.MediaTimelineController", "ClockRate", "Pause", "Position", "PositionChanged", "Resume", "Start", "State", "StateChanged"},
            {"Windows.Media.MediaTimelineControllerState", "Paused", "Running"},
            {"Windows.Media.MusicDisplayProperties", "AlbumTrackCount"},
            {"Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager", "CreateFromConnectionProfile"},
            {"Windows.Networking.NetworkOperatorsTetheringOperationStatus", "BluetoothDeviceOff", "NetworkLimitedConnectivity"},
            {"Windows.Networking.PushNotifications.PushNotificationChannelManager", "GetForUser"},
            {"Windows.Networking.PushNotifications.PushNotificationChannelManagerForUser", "CreatePushNotificationChannelForApplicationAsync", "CreatePushNotificationChannelForApplicationAsync", "CreatePushNotificationChannelForSecondaryTileAsync", "User"},
            {"Windows.Networking.Sockets.ControlChannelTrigger", "IsWakeFromLowPowerSupported"},
            {"Windows.Networking.Sockets.IWebSocketControl2", "IgnorableServerCertificateErrors"},
            {"Windows.Networking.Sockets.IWebSocketInformation2", "ServerCertificate", "ServerCertificateErrors", "ServerCertificateErrorSeverity", "ServerIntermediateCertificates"},
            {"Windows.Networking.Sockets.MessageWebSocket", "ServerCustomValidationRequested"},
            {"Windows.Networking.Sockets.MessageWebSocketControl", "IgnorableServerCertificateErrors"},
            {"Windows.Networking.Sockets.MessageWebSocketInformation", "ServerCertificate", "ServerCertificateErrors", "ServerCertificateErrorSeverity", "ServerIntermediateCertificates"},
            {"Windows.Networking.Sockets.StreamSocket", "GetEndpointPairsAsync", "GetEndpointPairsAsync"},
            {"Windows.Networking.Sockets.StreamWebSocket", "ServerCustomValidationRequested"},
            {"Windows.Networking.Sockets.StreamWebSocketControl", "IgnorableServerCertificateErrors"},
            {"Windows.Networking.Sockets.StreamWebSocketInformation", "ServerCertificate", "ServerCertificateErrors", "ServerCertificateErrorSeverity", "ServerIntermediateCertificates"},
            {"Windows.Networking.Sockets.WebSocketServerCustomValidationRequestedEventArgs", "GetDeferral", "Reject", "ServerCertificate", "ServerCertificateErrors", "ServerCertificateErrorSeverity", "ServerIntermediateCertificates"},
            {"Windows.Networking.Vpn.VpnDomainNameInfo", "WebProxyUris"},
            {"Windows.Networking.Vpn.VpnManagementConnectionStatus", "Disconnected", "Disconnecting", "Connected", "Connecting"},
            {"Windows.Networking.Vpn.VpnManagementErrorStatus", "CannotFindProfile", "AlreadyDisconnecting", "AlreadyConnected", "GeneralAuthenticationFailure", "EapFailure", "SmartCardFailure", "CertificateFailure", "ServerConfiguration", "NoConnection", "ServerConnection", "UserNamePassword", "DnsNotResolvable", "InvalidIP"},
            {"Windows.Networking.Vpn.VpnNativeProfile", "ConnectionStatus", "RequireVpnClientAppUI"},
            {"Windows.Networking.Vpn.VpnPlugInProfile", "ConnectionStatus", "RequireVpnClientAppUI"},
            {"Windows.Perception.Automation"},
            {"Windows.Perception.Automation.Core"},
            {"Windows.Perception.Automation.Core.CorePerceptionAutomation", "SetActivationFactoryProvider"},
            {"Windows.Perception.Automation.Core.PerceptionAutomationCoreContract"},
            {"Windows.Perception.Spatial.SpatialAnchor", "RemovedByUser"},
            {"Windows.Security.Authentication.Identity"},
            {"Windows.Security.Authentication.Identity.Core"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorAuthenticationManager", "AddDeviceAsync", "ApproveSessionAsync", "ApproveSessionAsync", "Current", "DenySessionAsync", "DenySessionAsync", "GetOneTimePassCodeAsync", "GetSessionsAndUnregisteredAccountsAsync", "GetSessionsAsync", "RemoveDeviceAsync", "UpdateWnsChannelAsync"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorAuthenticationType", "User", "Device"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorGetSessionsResult", "ServiceResponse", "Sessions"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorOneTimeCodedInfo", "Code", "ServiceResponse", "TimeInterval", "TimeToLive"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorServiceResponse", "Success", "Error", "NoNetworkConnection", "ServiceUnavailable", "TotpSetupDenied", "NgcNotSetup", "SessionAlreadyDenied", "SessionAlreadyApproved", "SessionExpired", "NgcNonceExpired", "InvalidSessionId", "InvalidSessionType", "InvalidOperation", "InvalidStateTransition", "DeviceNotFound", "FlowDisabled", "SessionNotApproved", "OperationCanceledByUser", "NgcDisabledByServer", "NgcKeyNotFoundOnServer", "UIRequired", "DeviceIdChanged"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorSessionApprovalStatus", "Pending", "Approved", "Denied"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorSessionAuthenticationStatus", "Authenticated", "Unauthenticated"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorSessionInfo", "ApprovalStatus", "AuthenticationType", "DisplaySessionId", "ExpirationTime", "RequestTime", "SessionId", "UserAccountId"},
            {"Windows.Security.Authentication.Identity.CoreMicrosoftAccountMultiFactorUnregisteredAccountsAndSessionInfo", "ServiceResponse", "Sessions", "UnregisteredAccounts"},
            {"Windows.Security.Authentication.Identity.Provider"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthentication", "AbortAuthenticationAsync", "AuthenticationStageChanged", "DeviceConfigurationData", "DeviceNonce", "FinishAuthenticationAsync", "GetAuthenticationStageInfoAsync", "ServiceAuthenticationHmac", "SessionNonce", "ShowNotificationMessageAsync", "StartAuthenticationAsync"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationMessage", "Invalid", "SwipeUpWelcome", "TapWelcome", "DeviceNeedsAttention", "LookingForDevice", "LookingForDevicePluggedin", "BluetoothIsDisabled", "NfcIsDisabled", "WiFiIsDisabled", "ExtraTapIsRequired", "DisabledByPolicy", "TapOnDeviceRequired", "HoldFinger", "ScanFinger", "UnauthorizedUser", "ReregisterRequired", "TryAgain", "SayPassphrase", "ReadyToSignIn", "UseAnotherSignInOption"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationResult", "Authentication", "Status"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationScenario", "SignIn", "CredentialPrompt"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationStage", "NotStarted", "WaitingForUserConfirmation", "CollectingCredential", "SuspendingAuthentication", "CredentialCollected", "CredentialAuthenticated", "StoppingAuthentication", "ReadyForLock"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationStageChangedEventArgs", "StageInfo"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationStageInfo", "DeviceId", "Scenario", "Stage"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorAuthenticationStatus", "Failed", "Started", "UnknownDevice", "DisabledByPolicy", "InvalidAuthenticationStage"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorDeviceCapabilities", "None", "SecureStorage", "StoreKeys", "ConfirmUserIntentToAuthenticate", "SupportSecureUserPresenceCheck", "TransmittedDataIsEncrypted", "HMacSha256"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorDeviceFindScope", "User", "AllUsers"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorFinishAuthenticationStatus", "Failed", "Completed", "NonceExpired"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorInfo", "DeviceConfigurationData", "DeviceFriendlyName", "DeviceId", "DeviceModelNumber"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorRegistration", "AbortRegisteringDeviceAsync", "FindAllRegisteredDeviceInfoAsync", "FinishRegisteringDeviceAsync", "RequestStartRegisteringDeviceAsync", "UnregisterDeviceAsync", "UpdateDeviceConfigurationDataAsync"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorRegistrationResult", "Registration", "Status"},
            {"Windows.Security.Authentication.Identity.Provider.SecondaryAuthenticationFactorRegistrationStatus", "Failed", "Started", "CanceledByUser", "PinSetupRequired", "DisabledByPolicy"},
            {"Windows.Security.Authentication.Identity.EnterpriseKeyCredentialRegistrationInfo", "KeyId", "KeyName", "Subject", "TenantId", "TenantName"},
            {"Windows.Security.Authentication.Identity.EnterpriseKeyCredentialRegistrationManager", "Current", "GetRegistrationsAsync"},
            {"Windows.Security.Authentication.Web.Core.WebAccountEventArgs", "Account"},
            {"Windows.Security.Authentication.Web.Core.WebAccountMonitor", "DefaultSignInAccountChanged", "Removed", "Updated"},
            {"Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager", "CreateWebAccountMonitor"},
            {"Windows.Security.Authentication.Web.Provider.WebAccountManager", "AddWebAccountAsync", "ClearPerUserFromPerAppAccountAsync", "GetPerUserFromPerAppAccountAsync", "SetPerAppToPerUserAccountAsync"},
            {"Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest", "GetApplicationTokenBindingKeyIdAsync"},
            {"Windows.Security.Authentication.Web.TokenBindingKeyType", "AnyExisting"},
            {"Windows.Security.Cryptography.Certificates.Certificate", "IsPerUser", "KeyStorageProviderName", "StoreName"},
            {"Windows.Security.Cryptography.Certificates.CertificateStores", "GetUserStoreByName"},
            {"Windows.Security.Cryptography.Certificates.StandardCertificateStoreNames", "IntermediateCertificationAuthorities", "Personal", "TrustedRootCertificationAuthorities"},
            {"Windows.Security.Cryptography.Certificates.UserCertificateStore", "Name", "RequestAddAsync", "RequestDeleteAsync"},
            {"Windows.Security.EnterpriseData.FileProtectionStatus", "FileInUse"},
            {"Windows.Security.EnterpriseData.ProtectionPolicyAuditAction", "Decrypt", "CopyToLocation", "SendToRecipient", "Other"},
            {"Windows.Security.EnterpriseData.ProtectionPolicyAuditInfo", "Action", "DataDescription", "SourceDescription", "TargetDescription"},
            {"Windows.Security.EnterpriseData.ProtectionPolicyManager", "LogAuditEvent", "RequestAccessAsync", "RequestAccessAsync", "RequestAccessForAppAsync", "RequestAccessForAppAsync", "ShowEnterpriseIndicator"},
            {"Windows.Security.EnterpriseData.ProtectionPolicyRequestAccessBehavior", "Decrypt", "TreatOverridePolicyAsBlock"},
            {"Windows.Services.Maps.LocalSearch.LocalLocation", "Category", "HoursOfOperation", "RatingInfo"},
            {"Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem", "Day", "Span", "Start"},
            {"Windows.Services.Maps.LocalSearch.LocalLocationRatingInfo", "AggregateRating", "ProviderIdentifier", "RatingCount"},
            {"Windows.Services.Maps.MapLocationDesiredAccuracy", "High", "Low"},
            {"Windows.Services.Maps.MapLocationFinder", "FindLocationsAtAsync"},
            {"Windows.Services.Store"},
            {"Windows.Services.Store.StoreAcquireLicenseResult", "ExtendedError", "StorePackageLicense"},
            {"Windows.Services.Store.StoreAppLicense", "AddOnLicenses", "ExpirationDate", "ExtendedJsonData", "IsActive", "IsTrial", "IsTrialOwnedByThisUser", "SkuStoreId", "TrialTimeRemaining", "TrialUniqueId"},
            {"Windows.Services.Store.StoreAvailability", "EndDate", "ExtendedJsonData", "Price", "RequestPurchaseAsync", "RequestPurchaseAsync", "StoreId"},
            {"Windows.Services.Store.StoreCollectionData", "AcquiredDate", "CampaignId", "DeveloperOfferId", "EndDate", "ExtendedJsonData", "IsTrial", "StartDate", "TrialTimeRemaining"},
            {"Windows.Services.Store.StoreConsumableResult", "BalanceRemaining", "ExtendedError", "Status", "TrackingId"},
            {"Windows.Services.Store.StoreConsumableStatus", "Succeeded", "InsufficentQuantity", "NetworkError", "ServerError"},
            {"Windows.Services.Store.StoreContext", "AcquireStoreLicenseForOptionalPackageAsync", "GetAppAndOptionalStorePackageUpdatesAsync", "GetAppLicenseAsync", "GetAssociatedStoreProductsAsync", "GetAssociatedStoreProductsWithPagingAsync", "GetConsumableBalanceRemainingAsync", "GetCustomerCollectionsIdAsync", "GetCustomerPurchaseIdAsync", "GetDefault", "GetForUser", "GetStoreProductForCurrentAppAsync", "GetStoreProductsAsync", "GetUserCollectionAsync", "GetUserCollectionWithPagingAsync", "OfflineLicensesChanged", "ReportConsumableFulfillmentAsync", "RequestDownloadAndInstallStorePackagesAsync", "RequestDownloadAndInstallStorePackageUpdatesAsync", "RequestDownloadStorePackageUpdatesAsync", "RequestPurchaseAsync", "RequestPurchaseAsync", "User"},
            {"Windows.Services.Store.StoreContract"},
            {"Windows.Services.Store.StoreDurationUnit", "Minute", "Hour", "Day", "Week", "Month", "Year"},
            {"Windows.Services.Store.StoreImage", "Caption", "Height", "ImagePurposeTag", "Uri", "Width"},
            {"Windows.Services.Store.StoreLicense", "ExpirationDate", "ExtendedJsonData", "InAppOfferToken", "IsActive", "SkuStoreId"},
            {"Windows.Services.Store.StorePackageLicense", "Dispose", "IsValid", "LicenseLost", "Package", "ReleaseLicense"},
            {"Windows.Services.Store.StorePackageUpdate", "Mandatory", "Package"},
            {"Windows.Services.Store.StorePackageUpdateResult", "OverallState", "StorePackageUpdateStatuses"},
            {"Windows.Services.Store.StorePackageUpdateState", "Pending", "Downloading", "Deploying", "Completed", "Canceled", "OtherError", "ErrorLowBattery", "ErrorWiFiRecommended", "ErrorWiFiRequired"},
            {"Windows.Services.Store.StorePackageUpdateStatus"},
            {"Windows.Services.Store.StorePackageUpdateStatus.PackageBytesDownloaded"},
            {"Windows.Services.Store.StorePackageUpdateStatus.PackageDownloadProgress"},
            {"Windows.Services.Store.StorePackageUpdateStatus.PackageDownloadSizeInBytes"},
            {"Windows.Services.Store.StorePackageUpdateStatus.PackageFamilyName"},
            {"Windows.Services.Store.StorePackageUpdateStatus.PackageUpdateState"},
            {"Windows.Services.Store.StorePackageUpdateStatus.TotalDownloadProgress"},
            {"Windows.Services.Store.StorePrice", "CurrencyCode", "FormattedBasePrice", "FormattedPrice", "FormattedRecurrencePrice", "IsOnSale", "SaleEndDate"},
            {"Windows.Services.Store.StoreProduct", "Description", "ExtendedJsonData", "GetIsAnySkuInstalledAsync", "HasDigitalDownload", "Images", "InAppOfferToken", "IsInUserCollection", "Keywords", "Language", "LinkUri", "Price", "ProductKind", "RequestPurchaseAsync", "RequestPurchaseAsync", "Skus", "StoreId", "Title", "Videos"},
            {"Windows.Services.Store.StoreProductPagedQueryResult", "ExtendedError", "GetNextAsync", "HasMoreResults", "Products"},
            {"Windows.Services.Store.StoreProductQueryResult", "ExtendedError", "Products"},
            {"Windows.Services.Store.StoreProductResult", "ExtendedError", "Product"},
            {"Windows.Services.Store.StorePurchaseProperties", "ExtendedJsonData", "Name"},
            {"Windows.Services.Store.StorePurchaseResult", "ExtendedError", "Status"},
            {"Windows.Services.Store.StorePurchaseStatus", "Succeeded", "AlreadyPurchased", "NotPurchased", "NetworkError", "ServerError"},
            {"Windows.Services.Store.StoreRequestHelper", "SendRequestAsync"},
            {"Windows.Services.Store.StoreSendRequestResult", "ExtendedError", "Response"},
            {"Windows.Services.Store.StoreSku", "Availabilities", "BundledSkus", "CollectionData", "CustomDeveloperData", "Description", "ExtendedJsonData", "GetIsInstalledAsync", "Images", "IsInUserCollection", "IsSubscription", "IsTrial", "Language", "Price", "RequestPurchaseAsync", "RequestPurchaseAsync", "StoreId", "SubscriptionInfo", "Title", "Videos"},
            {"Windows.Services.Store.StoreSubscriptionInfo", "BillingPeriod", "BillingPeriodUnit", "HasTrialPeriod", "TrialPeriod", "TrialPeriodUnit"},
            {"Windows.Services.Store.StoreVideo", "Caption", "Height", "PreviewImage", "Uri", "VideoPurposeTag", "Width"},
            {"Windows.Storage.StorageLibrary", "ChangeTracker"},
            {"Windows.Storage.StorageLibraryChange", "GetStorageItemAsync", "ChangeType", "IsOfType", "Path", "PreviousPath"},
            {"Windows.Storage.StorageLibraryChangeReader", "AcceptChangesAsync", "ReadBatchAsync"},
            {"Windows.Storage.StorageLibraryChangeTracker", "Enable", "GetChangeReader", "Reset"},
            {"Windows.Storage.StorageLibraryChangeType", "Created", "Deleted", "MovedOrRenamed", "ContentsChanged", "MovedOutOfLibrary", "MovedIntoLibrary", "ContentsReplaced", "IndexingStatusChanged", "EncryptionChanged", "ChangeTrackingLost"},
            {"Windows.System.Profile.ProfileSharedModeContract"},
            {"Windows.System.Profile.SharedModeSettings", "IsEnabled"},
            {"Windows.System.Profile.SystemIdentification", "GetSystemIdForPublisher", "GetSystemIdForUser"},
            {"Windows.System.Profile.SystemIdentificationInfo", "Id", "Source"},
            {"Windows.System.Profile.SystemIdentificationSource", "None", "Tpm", "Uefi"},
            {"Windows.System.RemoteSystems"},
            {"Windows.System.RemoteSystems.IRemoteSystemFilter"},
            {"Windows.System.RemoteSystems.RemoteSystem", "CreateWatcher", "CreateWatcher", "DisplayName", "FindByHostNameAsync", "Id", "IsAvailableByProximity", "Kind", "RequestAccessAsync", "Status"},
            {"Windows.System.RemoteSystems.RemoteSystemAccessStatus", "Unspecified", "Allowed", "DeniedByUser", "DeniedBySystem"},
            {"Windows.System.RemoteSystems.RemoteSystemAddedEventArgs", "RemoteSystem"},
            {"Windows.System.RemoteSystems.RemoteSystemConnectionRequest", "RemoteSystem"},
            {"Windows.System.RemoteSystems.RemoteSystemDiscoveryType", "Any", "Proximal", "Cloud"},
            {"Windows.System.RemoteSystems.RemoteSystemDiscoveryTypeFilter", "RemoteSystemDiscoveryType"},
            {"Windows.System.RemoteSystems.RemoteSystemKindFilter", "RemoteSystemKinds"},
            {"Windows.System.RemoteSystems.RemoteSystemKinds", "Desktop", "Holographic", "Hub", "Phone", "Xbox"},
            {"Windows.System.RemoteSystems.RemoteSystemRemovedEventArgs", "RemoteSystemId"},
            {"Windows.System.RemoteSystems.RemoteSystemStatus", "Unavailable", "DiscoveringAvailability", "Available", "Unknown"},
            {"Windows.System.RemoteSystems.RemoteSystemStatusType", "Any", "Available"},
            {"Windows.System.RemoteSystems.RemoteSystemStatusTypeFilter", "RemoteSystemStatusType"},
            {"Windows.System.RemoteSystems.RemoteSystemUpdatedEventArgs", "RemoteSystem"},
            {"Windows.System.RemoteSystems.RemoteSystemWatcher", "RemoteSystemAdded", "RemoteSystemRemoved", "RemoteSystemUpdated", "Start", "Stop"},
            {"Windows.System.UserProfile.AdvertisingManager", "GetForUser"},
            {"Windows.System.UserProfile.AdvertisingManagerForUser", "AdvertisingId", "User"},
            {"Windows.System.AppMemoryUsageLevel", "OverLimit"},
            {"Windows.System.Launcher", "FindAppUriHandlersAsync", "LaunchUriForResultsForUserAsync", "LaunchUriForResultsForUserAsync", "LaunchUriForUserAsync", "LaunchUriForUserAsync", "LaunchUriForUserAsync", "QueryAppUriSupportAsync", "QueryAppUriSupportAsync"},
            {"Windows.System.LauncherOptions", "IgnoreAppUriHandlers"},
            {"Windows.System.LaunchFileStatus", "Success", "AppUnavailable", "DeniedByPolicy", "FileTypeNotSupported", "Unknown"},
            {"Windows.System.RemoteLauncher", "LaunchUriAsync", "LaunchUriAsync", "LaunchUriAsync"},
            {"Windows.System.RemoteLauncherOptions", "FallbackUri", "PreferredAppIds"},
            {"Windows.System.RemoteLaunchUriStatus", "Unknown", "Success", "AppUnavailable", "ProtocolUnavailable", "RemoteSystemUnavailable", "ValueSetTooLarge", "DeniedByLocalSystem", "DeniedByRemoteSystem"},
            {"Windows.System.UserDeviceAssociation", "FindUserFromDeviceId", "UserDeviceAssociationChanged"},
            {"Windows.System.UserDeviceAssociationChangedEventArgs", "DeviceId", "NewUser", "OldUser"},
            {"Windows.System.UserPicker", "AllowGuestAccounts", "IsSupported", "PickSingleUserAsync", "SuggestedSelectedUser"},
            {"Windows.UI.ApplicationSettings.AccountsSettingsPane", "ShowAddAccountAsync", "ShowManageAccountsAsync"},
            {"Windows.UI.Composition.Effects"},
            {"Windows.UI.Composition.Effects.SceneLightingEffect", "AmbientAmount", "DiffuseAmount", "Name", "NormalMapSource", "SpecularAmount", "SpecularShine"},
            {"Windows.UI.Composition.Interactions"},
            {"Windows.UI.Composition.Interactions.CompositionInteractionSourceCollection", "Add", "Count", "Remove", "RemoveAll"},
            {"Windows.UI.Composition.Interactions.ICompositionInteractionSource"},
            {"Windows.UI.Composition.Interactions.IInteractionTrackerOwner", "CustomAnimationStateEntered", "IdleStateEntered", "InertiaStateEntered", "InteractingStateEntered", "RequestIgnored", "ValuesChanged"},
            {"Windows.UI.Composition.Interactions.InteractionChainingMode", "Auto", "Always", "Never"},
            {"Windows.UI.Composition.Interactions.InteractionSourceMode", "Disabled", "EnabledWithInertia", "EnabledWithoutInertia"},
            {"Windows.UI.Composition.Interactions.InteractionTracker", "AdjustPositionXIfGreaterThanThreshold", "AdjustPositionYIfGreaterThanThreshold", "ConfigurePositionXInertiaModifiers", "ConfigurePositionYInertiaModifiers", "ConfigureScaleInertiaModifiers", "Create", "CreateWithOwner", "InteractionSources", "IsPositionRoundingSuggested", "MaxPosition", "MaxScale", "MinPosition", "MinScale", "NaturalRestingPosition", "NaturalRestingScale", "Owner", "Position", "PositionInertiaDecayRate", "PositionVelocityInPixelsPerSecond", "Scale", "ScaleInertiaDecayRate", "ScaleVelocityInPercentPerSecond", "TryUpdatePosition", "TryUpdatePositionBy", "TryUpdatePositionWithAdditionalVelocity", "TryUpdatePositionWithAnimation", "TryUpdateScale", "TryUpdateScaleWithAdditionalVelocity", "TryUpdateScaleWithAnimation"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs", "RequestId"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs", "RequestId"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerInertiaModifier"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion", "Condition", "Create", "Motion"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue", "Condition", "Create", "RestingValue"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs", "ModifiedRestingPosition", "ModifiedRestingScale", "NaturalRestingPosition", "NaturalRestingScale", "PositionVelocityInPixelsPerSecond", "RequestId", "ScaleVelocityInPercentPerSecond"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs", "RequestId"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs", "RequestId"},
            {"Windows.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs", "Position", "RequestId", "Scale"},
            {"Windows.UI.Composition.Interactions.VisualInteractionSource", "Create", "IsPositionXRailsEnabled", "IsPositionYRailsEnabled", "ManipulationRedirectionMode", "PositionXChainingMode", "PositionXSourceMode", "PositionYChainingMode", "PositionYSourceMode", "ScaleChainingMode", "ScaleSourceMode", "Source", "TryRedirectForManipulation"},
            {"Windows.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode", "Off", "CapableTouchpadOnly"},
            {"Windows.UI.Composition.AmbientLight", "Color"},
            {"Windows.UI.Composition.AnimationDirection", "Normal", "Reverse", "Alternate", "AlternateReverse"},
            {"Windows.UI.Composition.CompositionAnimation", "SetBooleanParameter", "Target"},
            {"Windows.UI.Composition.CompositionAnimationGroup", "Add", "Count", "Remove", "RemoveAll"},
            {"Windows.UI.Composition.CompositionBackdropBrush"},
            {"Windows.UI.Composition.CompositionClip", "AnchorPoint", "CenterPoint", "Offset", "RotationAngle", "RotationAngleInDegrees", "Scale", "TransformMatrix"},
            {"Windows.UI.Composition.CompositionCompositeMode", "MinBlend"},
            {"Windows.UI.Composition.CompositionLight", "Targets"},
            {"Windows.UI.Composition.CompositionMaskBrush", "Mask", "Source"},
            {"Windows.UI.Composition.CompositionNineGridBrush", "BottomInset", "BottomInsetScale", "IsCenterHollow", "LeftInset", "LeftInsetScale", "RightInset", "RightInsetScale", "SetInsets", "SetInsets", "SetInsetScales", "SetInsetScales", "Source", "TopInset", "TopInsetScale"},
            {"Windows.UI.Composition.CompositionObject", "Comment", "ImplicitAnimations", "StartAnimationGroup", "StopAnimationGroup"},
            {"Windows.UI.Composition.CompositionPropertySet", "InsertBoolean", "TryGetBoolean"},
            {"Windows.UI.Composition.CompositionShadow"},
            {"Windows.UI.Composition.CompositionSurfaceBrush", "AnchorPoint", "CenterPoint", "Offset", "RotationAngle", "RotationAngleInDegrees", "Scale", "TransformMatrix"},
            {"Windows.UI.Composition.Compositor", "CreateAmbientLight", "CreateAnimationGroup", "CreateBackdropBrush", "CreateDistantLight", "CreateDropShadow", "CreateImplicitAnimationCollection", "CreateLayerVisual", "CreateMaskBrush", "CreateNineGridBrush", "CreatePointLight", "CreateSpotLight", "CreateStepEasingFunction", "CreateStepEasingFunction"},
            {"Windows.UI.Composition.DistantLight", "Color", "CoordinateSpace", "Direction"},
            {"Windows.UI.Composition.DropShadow", "BlurRadius", "Color", "Mask", "Offset", "Opacity"},
            {"Windows.UI.Composition.ICompositionAnimationBase"},
            {"Windows.UI.Composition.ImplicitAnimationCollection", "Size"},
            {"Windows.UI.Composition.KeyFrameAnimation", "Direction"},
            {"Windows.UI.Composition.LayerVisual", "Effect"},
            {"Windows.UI.Composition.PointLight", "Color", "ConstantAttenuation", "CoordinateSpace", "LinearAttenuation", "Offset", "QuadraticAttenuation"},
            {"Windows.UI.Composition.SpotLight", "ConstantAttenuation", "CoordinateSpace", "Direction", "InnerConeAngle", "InnerConeAngleInDegrees", "InnerConeColor", "LinearAttenuation", "Offset", "OuterConeAngle", "OuterConeAngleInDegrees", "OuterConeColor", "QuadraticAttenuation"},
            {"Windows.UI.Composition.SpriteVisual", "Shadow"},
            {"Windows.UI.Composition.StepEasingFunction", "FinalStep", "InitialStep", "IsFinalStepSingleFrame", "IsInitialStepSingleFrame", "StepCount"},
            {"Windows.UI.Composition.VisualUnorderedCollection", "Add", "Count", "Remove", "RemoveAll"},
            {"Windows.UI.Core.AcceleratorKeyEventArgs", "DeviceId"},
            {"Windows.UI.Core.ClosestInteractiveBoundsRequestedEventArgs", "ClosestInteractiveBounds", "PointerPosition", "SearchBounds"},
            {"Windows.UI.Core.CoreComponentInputSource", "ClosestInteractiveBoundsRequested", "GetCurrentKeyEventDeviceId"},
            {"Windows.UI.Core.CoreWindow", "ClosestInteractiveBoundsRequested", "GetCurrentKeyEventDeviceId"},
            {"Windows.UI.Core.KeyEventArgs", "DeviceId"},
            {"Windows.UI.Input.Inking.Core.CoreWetStrokeDisposition", "Inking", "Completed", "Canceled"},
            {"Windows.UI.Input.Inking.Core.CoreWetStrokeUpdateEventArgs", "Disposition", "NewInkPoints", "PointerId"},
            {"Windows.UI.Input.Inking.Core.CoreWetStrokeUpdateSource", "Create", "InkPresenter", "WetStrokeCanceled", "WetStrokeCompleted", "WetStrokeContinuing", "WetStrokeStarting", "WetStrokeStopping"},
            {"Windows.UI.Input.Inking.IInkPresenterRulerFactory", "Create"},
            {"Windows.UI.Input.Inking.IInkPresenterStencil", "BackgroundColor", "ForegroundColor", "IsVisible", "Kind", "Transform"},
            {"Windows.UI.Input.Inking.InkDrawingAttributes", "CreateForPencil", "Kind", "PencilProperties"},
            {"Windows.UI.Input.Inking.InkDrawingAttributesKind", "Default", "Pencil"},
            {"Windows.UI.Input.Inking.InkDrawingAttributesPencilProperties", "Opacity"},
            {"Windows.UI.Input.Inking.InkPresenterRuler", "BackgroundColor", "ForegroundColor", "IsVisible", "Kind", "Length", "Transform", "Width"},
            {"Windows.UI.Input.Inking.InkPresenterStencilKind", "Other", "Ruler"},
            {"Windows.UI.Input.Preview"},
            {"Windows.UI.Input.Preview.Injection"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputButtonChangeKind", "None", "FirstButtonDown", "FirstButtonUp", "SecondButtonDown", "SecondButtonUp", "ThirdButtonDown", "ThirdButtonUp", "FourthButtonDown", "FourthButtonUp", "FifthButtonDown", "FifthButtonUp"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo", "KeyOptions", "ScanCode", "VirtualKey"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputKeyOptions", "None", "ExtendedKey", "KeyUp", "Unicode", "ScanCode"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo", "DeltaX", "DeltaY", "MouseData", "MouseOptions", "TimeOffsetInMilliseconds"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputMouseOptions", "None", "Move", "LeftDown", "LeftUp", "RightDown", "RightUp", "MiddleDown", "MiddleUp", "XDown", "XUp", "Wheel", "HWheel", "MoveNoCoalesce", "VirtualDesk", "Absolute"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPenButtons", "None", "Barrel", "Inverted", "Eraser"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPenInfo", "PenButtons", "PenParameters", "PointerInfo", "Pressure", "Rotation", "TiltX", "TiltY"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPenParameters", "None", "Pressure", "Rotation", "TiltX", "TiltY"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPoint"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPoint.PositionX"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPoint.PositionY"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo.PerformanceCount"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo.PixelLocation"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo.PointerId"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo.PointerOptions"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo.TimeOffsetInMilliseconds"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputPointerOptions", "None", "New", "InRange", "InContact", "FirstButton", "SecondButton", "Primary", "Confidence", "Canceled", "PointerDown", "Update", "PointerUp", "CaptureChanged"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputRectangle"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputRectangle.Bottom"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputRectangle.Left"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputRectangle.Right"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputRectangle.Top"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputShortcut", "Back", "Start", "Search"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo", "Contact", "Orientation", "PointerInfo", "Pressure", "TouchParameters"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputTouchParameters", "None", "Contact", "Orientation", "Pressure"},
            {"Windows.UI.Input.Preview.Injection.InjectedInputVisualizationMode", "None", "Default", "Indirect"},
            {"Windows.UI.Input.Preview.Injection.InputInjector", "InitializePenInjection", "InitializeTouchInjection", "InjectKeyboardInput", "InjectMouseInput", "InjectPenInput", "InjectShortcut", "InjectTouchInput", "TryCreate", "UninitializePenInjection", "UninitializeTouchInjection"},
            {"Windows.UI.Input.Spatial.SpatialInteractionSourceLocation", "Orientation"},
            {"Windows.UI.Input.RadialController", "ButtonClicked", "ControlAcquired", "ControlLost", "CreateForCurrentView", "IsSupported", "Menu", "RotationChanged", "RotationResolutionInDegrees", "ScreenContactContinued", "ScreenContactEnded", "ScreenContactStarted", "UseAutomaticHapticFeedback"},
            {"Windows.UI.Input.RadialControllerButtonClickedEventArgs", "Contact"},
            {"Windows.UI.Input.RadialControllerConfiguration", "GetForCurrentView", "ResetToDefaultMenuItems", "SetDefaultMenuItems", "TrySelectDefaultMenuItem"},
            {"Windows.UI.Input.RadialControllerControlAcquiredEventArgs", "Contact"},
            {"Windows.UI.Input.RadialControllerMenu", "GetSelectedMenuItem", "IsEnabled", "Items", "SelectMenuItem", "TrySelectPreviouslySelectedMenuItem"},
            {"Windows.UI.Input.RadialControllerMenuItem", "CreateFromIcon", "CreateFromKnownIcon", "DisplayText", "Invoked", "Tag"},
            {"Windows.UI.Input.RadialControllerMenuKnownIcon", "Scroll", "Zoom", "UndoRedo", "Volume", "NextPreviousTrack", "Ruler", "InkColor", "InkThickness", "PenType"},
            {"Windows.UI.Input.RadialControllerRotationChangedEventArgs", "Contact", "RotationDeltaInDegrees"},
            {"Windows.UI.Input.RadialControllerScreenContact", "Bounds", "Position"},
            {"Windows.UI.Input.RadialControllerScreenContactContinuedEventArgs", "Contact"},
            {"Windows.UI.Input.RadialControllerScreenContactStartedEventArgs", "Contact"},
            {"Windows.UI.Input.RadialControllerSystemMenuItemKind", "Scroll", "Zoom", "UndoRedo", "Volume", "NextPreviousTrack"},
            {"Windows.UI.Notifications.Management"},
            {"Windows.UI.Notifications.Management.UserNotificationListener", "ClearNotifications", "Current", "GetAccessStatus", "GetNotification", "GetNotificationsAsync", "NotificationChanged", "RemoveNotification", "RequestAccessAsync"},
            {"Windows.UI.Notifications.Management.UserNotificationListenerAccessStatus", "Unspecified", "Allowed", "Denied"},
            {"Windows.UI.Notifications.AdaptiveNotificationContentKind", "Text"},
            {"Windows.UI.Notifications.AdaptiveNotificationText", "Hints", "Kind", "Language", "Text"},
            {"Windows.UI.Notifications.BadgeUpdateManager", "GetForUser"},
            {"Windows.UI.Notifications.BadgeUpdateManagerForUser", "CreateBadgeUpdaterForApplication", "CreateBadgeUpdaterForApplication", "CreateBadgeUpdaterForSecondaryTile", "User"},
            {"Windows.UI.Notifications.IAdaptiveNotificationContent", "Hints", "Kind"},
            {"Windows.UI.Notifications.KnownAdaptiveNotificationHints", "Align", "MaxLines", "MinLines", "Style", "TextStacking", "Wrap"},
            {"Windows.UI.Notifications.KnownAdaptiveNotificationTextStyles", "Base", "BaseSubtle", "Body", "BodySubtle", "Caption", "CaptionSubtle", "Header", "HeaderNumeral", "HeaderNumeralSubtle", "HeaderSubtle", "Subheader", "SubheaderNumeral", "SubheaderNumeralSubtle", "SubheaderSubtle", "Subtitle", "SubtitleSubtle", "Title", "TitleNumeral", "TitleSubtle"},
            {"Windows.UI.Notifications.KnownNotificationBindings", "ToastGeneric"},
            {"Windows.UI.Notifications.Notification", "ExpirationTime", "Visual"},
            {"Windows.UI.Notifications.NotificationBinding", "GetTextElements", "Hints", "Language", "Template"},
            {"Windows.UI.Notifications.NotificationKinds", "Unknown", "Toast"},
            {"Windows.UI.Notifications.NotificationMirroring", "Allowed", "Disabled"},
            {"Windows.UI.Notifications.NotificationVisual", "Bindings", "GetBinding", "Language"},
            {"Windows.UI.Notifications.ShownTileNotification", "Arguments"},
            {"Windows.UI.Notifications.ScheduledToastNotification", "NotificationMirroring", "RemoteId"},
            {"Windows.UI.Notifications.TileUpdateManager", "GetForUser"},
            {"Windows.UI.Notifications.TileUpdateManagerForUser", "CreateTileUpdaterForApplication", "CreateTileUpdaterForApplicationForUser", "CreateTileUpdaterForSecondaryTile", "User"},
            {"Windows.UI.Notifications.ToastNotification", "NotificationMirroring", "RemoteId"},
            {"Windows.UI.Notifications.ToastNotificationManager", "ConfigureNotificationMirroring", "GetForUser"},
            {"Windows.UI.Notifications.ToastNotificationManagerForUser", "CreateToastNotifier", "CreateToastNotifier", "History", "User"},
            {"Windows.UI.Notifications.UserNotification", "AppInfo", "CreationTime", "Id", "Notification"},
            {"Windows.UI.Notifications.UserNotificationChangedEventArgs", "ChangeKind", "UserNotificationId"},
            {"Windows.UI.Notifications.UserNotificationChangedKind", "Added", "Removed"},
            {"Windows.UI.Text.Core.CoreTextInputScope", "ChatWithoutEmoji"},
            {"Windows.UI.ViewManagement.ApplicationViewScaling", "DisableLayoutScaling", "TrySetDisableLayoutScaling"},
            {"Windows.UI.ViewManagement.ViewManagementViewScalingContract"},
            {"Windows.UI.WebUI.EnteredBackgroundEventHandler"},
            {"Windows.UI.WebUI.LeavingBackgroundEventHandler"},
            {"Windows.UI.WebUI.EnteredBackgroundEventArgs", "GetDeferral"},
            {"Windows.UI.WebUI.LeavingBackgroundEventArgs", "GetDeferral"},
            {"Windows.UI.WebUI.WebUIApplication", "EnablePrelaunch", "EnteredBackground", "LeavingBackground"},
            {"Windows.UI.WebUI.WebUIAppointmentsProviderAddAppointmentActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUICachedFileUpdaterActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIDeviceActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIDevicePairingActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIDialReceiverActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIFileActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIFileOpenPickerActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIFileOpenPickerContinuationEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIFileSavePickerActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIFileSavePickerContinuationEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIFolderPickerContinuationEventArgs", "User"},
            {"Windows.UI.WebUI.WebUILaunchActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUILockScreenActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIProtocolActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIProtocolForResultsActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIRestrictedLaunchActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIShareTargetActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIToastNotificationActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIUserDataAccountProviderActivatedEventArgs", "ActivatedOperation", "Kind", "Operation", "PreviousExecutionState", "SplashScreen"},
            {"Windows.UI.WebUI.WebUIVoiceCommandActivatedEventArgs", "User"},
            {"Windows.UI.WebUI.WebUIWebAccountProviderActivatedEventArgs", "User"},
            {"Windows.UI.Xaml.Automation.Peers.AppBarAutomationPeer", "Close", "InteractionState", "IsModal", "IsTopmost", "Maximizable", "Minimizable", "SetVisualState", "VisualState", "WaitForInputIdle"},
            {"Windows.UI.Xaml.Automation.Peers.AutomationEvents", "LayoutInvalidated"},
            {"Windows.UI.Xaml.Automation.Peers.AutomationPeer", "GetFullDescription", "IsDataValidForForm", "IsPeripheral"},
            {"Windows.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer", "Close", "InteractionState", "IsModal", "IsTopmost", "Maximizable", "Minimizable", "SetVisualState", "VisualState", "WaitForInputIdle"},
            {"Windows.UI.Xaml.Automation.Peers.InkToolbarAutomationPeer"},
            {"Windows.UI.Xaml.Automation.Peers.MapControlAutomationPeer", "HorizontallyScrollable", "HorizontalScrollPercent", "HorizontalViewSize", "Scroll", "SetScrollPercent", "VerticallyScrollable", "VerticalScrollPercent", "VerticalViewSize"},
            {"Windows.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer"},
            {"Windows.UI.Xaml.Automation.AnnotationType", "InsertionChange", "DeletionChange", "MoveChange", "FormatChange", "UnsyncedChange", "EditingLockedChange", "ExternalChange", "ConflictingChange", "Author", "AdvancedProofingIssue", "DataValidationError", "CircularReferenceError"},
            {"Windows.UI.Xaml.Automation.AutomationElementIdentifiers", "DescribedByProperty", "FlowsFromProperty", "FlowsToProperty", "FullDescriptionProperty", "IsDataValidForFormProperty", "IsPeripheralProperty"},
            {"Windows.UI.Xaml.Automation.AutomationProperties", "DescribedByProperty", "FlowsFromProperty", "FlowsToProperty", "FullDescriptionProperty", "GetDescribedBy", "GetFlowsFrom", "GetFlowsTo", "GetFullDescription", "GetIsDataValidForForm", "GetIsPeripheral", "GetLocalizedControlType", "IsDataValidForFormProperty", "IsPeripheralProperty", "LocalizedControlTypeProperty", "SetFullDescription", "SetIsDataValidForForm", "SetIsPeripheral", "SetLocalizedControlType"},
            {"Windows.UI.Xaml.Controls.Maps.MapControl", "BusinessLandmarksEnabled", "BusinessLandmarksEnabledProperty", "GetVisibleRegion", "TransitFeaturesEnabled", "TransitFeaturesEnabledProperty"},
            {"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs", "LocalLocations"},
            {"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs", "LocalLocations"},
            {"Windows.UI.Xaml.Controls.Maps.MapControlDataHelper", "BusinessLandmarkPointerEntered", "BusinessLandmarkPointerExited", "TransitFeaturePointerEntered", "TransitFeaturePointerExited"},
            {"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs", "DisplayName", "Location", "TransitProperties"},
            {"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs", "DisplayName", "Location", "TransitProperties"},
            {"Windows.UI.Xaml.Controls.Maps.MapInteractionMode", "PointerOnly"},
            {"Windows.UI.Xaml.Controls.Maps.MapVisibleRegionKind", "Near", "Full"},
            {"Windows.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings", "EffectiveOverflowButtonVisibility"},
            {"Windows.UI.Xaml.Controls.Primitives.FlyoutBase", "AllowFocusOnInteraction", "AllowFocusOnInteractionProperty", "AllowFocusWhenDisabled", "AllowFocusWhenDisabledProperty", "Closing", "ElementSoundMode", "ElementSoundModeProperty", "LightDismissOverlayMode", "LightDismissOverlayModeProperty", "Target"},
            {"Windows.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs", "Cancel"},
            {"Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel", "GetInsertionIndexes"},
            {"Windows.UI.Xaml.Controls.Primitives.Popup", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.AppBar", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.AppBarButton", "DynamicOverflowOrder", "DynamicOverflowOrderProperty", "IsInOverflow", "IsInOverflowProperty", "LabelPosition", "LabelPositionProperty"},
            {"Windows.UI.Xaml.Controls.AppBarSeparator", "DynamicOverflowOrder", "DynamicOverflowOrderProperty", "IsInOverflow", "IsInOverflowProperty"},
            {"Windows.UI.Xaml.Controls.AppBarToggleButton", "DynamicOverflowOrder", "DynamicOverflowOrderProperty", "IsInOverflow", "IsInOverflowProperty", "LabelPosition", "LabelPositionProperty"},
            {"Windows.UI.Xaml.Controls.AutoSuggestBox", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.CalendarDatePicker", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.ComboBox", "IsTextSearchEnabled", "IsTextSearchEnabledProperty", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.CommandBar", "DefaultLabelPosition", "DefaultLabelPositionProperty", "DynamicOverflowItemsChanging", "IsDynamicOverflowEnabled", "IsDynamicOverflowEnabledProperty", "OverflowButtonVisibility", "OverflowButtonVisibilityProperty"},
            {"Windows.UI.Xaml.Controls.CommandBarDefaultLabelPosition", "Bottom", "Right", "Collapsed"},
            {"Windows.UI.Xaml.Controls.CommandBarDynamicOverflowAction", "AddingToOverflow", "RemovingFromOverflow"},
            {"Windows.UI.Xaml.Controls.CommandBarLabelPosition", "Default", "Collapsed"},
            {"Windows.UI.Xaml.Controls.CommandBarOverflowButtonVisibility", "Auto", "Visible", "Collapsed"},
            {"Windows.UI.Xaml.Controls.Control", "ElementSoundMode", "ElementSoundModeProperty", "FocusDisengaged", "FocusEngaged", "IsFocusEngaged", "IsFocusEngagedProperty", "IsFocusEngagementEnabled", "IsFocusEngagementEnabledProperty", "RemoveFocusEngagement", "RequiresPointer", "RequiresPointerProperty", "XYFocusDown", "XYFocusDownProperty", "XYFocusLeft", "XYFocusLeftProperty", "XYFocusRight", "XYFocusRightProperty", "XYFocusUp", "XYFocusUpProperty"},
            {"Windows.UI.Xaml.Controls.DatePicker", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs", "Action"},
            {"Windows.UI.Xaml.Controls.FocusDisengagedEventArgs"},
            {"Windows.UI.Xaml.Controls.FocusEngagedEventArgs"},
            {"Windows.UI.Xaml.Controls.ICommandBarElement2", "DynamicOverflowOrder", "IsInOverflow"},
            {"Windows.UI.Xaml.Controls.IInsertionPanel", "GetInsertionIndexes"},
            {"Windows.UI.Xaml.Controls.Image", "GetAlphaMask"},
            {"Windows.UI.Xaml.Controls.InkToolbar", "ActiveTool", "ActiveToolChanged", "ActiveToolProperty", "EraseAllClicked", "GetToggleButton", "GetToolButton", "Children", "ChildrenProperty", "InitialControls", "InitialControlsProperty", "InkDrawingAttributes", "InkDrawingAttributesChanged", "InkDrawingAttributesProperty", "IsRulerButtonChecked", "IsRulerButtonCheckedChanged", "IsRulerButtonCheckedProperty", "TargetInkCanvas", "TargetInkCanvasProperty"},
            {"Windows.UI.Xaml.Controls.InkToolbarBallpointPenButton"},
            {"Windows.UI.Xaml.Controls.InkToolbarCustomPen", "CreateInkDrawingAttributes"},
            {"Windows.UI.Xaml.Controls.InkToolbarCustomPenButton", "ConfigurationContent", "ConfigurationContentProperty", "CustomPen", "CustomPenProperty"},
            {"Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton"},
            {"Windows.UI.Xaml.Controls.InkToolbarCustomToolButton", "ConfigurationContent", "ConfigurationContentProperty"},
            {"Windows.UI.Xaml.Controls.InkToolbarEraserButton"},
            {"Windows.UI.Xaml.Controls.InkToolbarHighlighterButton"},
            {"Windows.UI.Xaml.Controls.InkToolbarInitialControls", "All", "None", "PensOnly", "AllExceptPens"},
            {"Windows.UI.Xaml.Controls.InkToolbarPenButton", "MaxStrokeWidth", "MaxStrokeWidthProperty", "MinStrokeWidth", "MinStrokeWidthProperty", "Palette", "PaletteProperty", "SelectedBrush", "SelectedBrushIndex", "SelectedBrushIndexProperty", "SelectedBrushProperty", "SelectedStrokeWidth", "SelectedStrokeWidthProperty"},
            {"Windows.UI.Xaml.Controls.InkToolbarPencilButton"},
            {"Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl", "PenButton", "PenButtonProperty"},
            {"Windows.UI.Xaml.Controls.InkToolbarRulerButton", "Ruler", "RulerProperty"},
            {"Windows.UI.Xaml.Controls.InkToolbarToggle", "Ruler", "Custom"},
            {"Windows.UI.Xaml.Controls.InkToolbarToggleButton", "ToggleKind"},
            {"Windows.UI.Xaml.Controls.InkToolbarTool", "BallpointPen", "Pencil", "Highlighter", "Eraser", "CustomPen", "CustomTool"},
            {"Windows.UI.Xaml.Controls.InkToolbarToolButton", "IsExtensionGlyphShown", "IsExtensionGlyphShownProperty", "ToolKind"},
            {"Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode", "KeepLastItemInView"},
            {"Windows.UI.Xaml.Controls.LightDismissOverlayMode", "Auto", "On", "Off"},
            {"Windows.UI.Xaml.Controls.ListBox", "SingleSelectionFollowsFocus", "SingleSelectionFollowsFocusProperty"},
            {"Windows.UI.Xaml.Controls.ListViewBase", "IsDragSource", "SingleSelectionFollowsFocus", "SingleSelectionFollowsFocusProperty"},
            {"Windows.UI.Xaml.Controls.MediaPlayerElement", "AreTransportControlsEnabled", "AreTransportControlsEnabledProperty", "AutoPlay", "AutoPlayProperty", "IsFullWindow", "IsFullWindowProperty", "MediaPlayer", "MediaPlayerProperty", "PosterSource", "PosterSourceProperty", "SetMediaPlayer", "Source", "SourceProperty", "Stretch", "StretchProperty", "TransportControls"},
            {"Windows.UI.Xaml.Controls.MediaPlayerPresenter", "IsFullWindow", "IsFullWindowProperty", "MediaPlayer", "MediaPlayerProperty", "Stretch", "StretchProperty"},
            {"Windows.UI.Xaml.Controls.MediaTransportControls", "FastPlayFallbackBehaviour", "FastPlayFallbackBehaviourProperty", "IsNextTrackButtonVisible", "IsNextTrackButtonVisibleProperty", "IsPreviousTrackButtonVisible", "IsPreviousTrackButtonVisibleProperty", "IsSkipBackwardButtonVisible", "IsSkipBackwardButtonVisibleProperty", "IsSkipBackwardEnabled", "IsSkipBackwardEnabledProperty", "IsSkipForwardButtonVisible", "IsSkipForwardButtonVisibleProperty", "IsSkipForwardEnabled", "IsSkipForwardEnabledProperty", "ThumbnailRequested"},
            {"Windows.UI.Xaml.Controls.Pivot", "HeaderFocusVisualPlacement", "HeaderFocusVisualPlacementProperty", "IsHeaderItemsCarouselEnabled", "IsHeaderItemsCarouselEnabledProperty"},
            {"Windows.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement", "ItemHeaders", "SelectedItemHeader"},
            {"Windows.UI.Xaml.Controls.RequiresPointer", "Never", "WhenEngaged", "WhenFocused"},
            {"Windows.UI.Xaml.Controls.SplitView", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.StackPanel", "GetInsertionIndexes"},
            {"Windows.UI.Xaml.Controls.TextBlock", "GetAlphaMask"},
            {"Windows.UI.Xaml.Controls.TimePicker", "LightDismissOverlayMode", "LightDismissOverlayModeProperty"},
            {"Windows.UI.Xaml.Controls.WebView", "XYFocusDown", "XYFocusDownProperty", "XYFocusLeft", "XYFocusLeftProperty", "XYFocusRight", "XYFocusRightProperty", "XYFocusUp", "XYFocusUpProperty"},
            {"Windows.UI.Xaml.Controls.WebViewPermissionType", "WebNotifications"},
            {"Windows.UI.Xaml.Documents.Hyperlink", "ElementSoundMode", "ElementSoundModeProperty", "XYFocusDown", "XYFocusDownProperty", "XYFocusLeft", "XYFocusLeftProperty", "XYFocusRight", "XYFocusRightProperty", "XYFocusUp", "XYFocusUpProperty"},
            {"Windows.UI.Xaml.Documents.TextElement", "AccessKey", "AccessKeyProperty", "AllowFocusOnInteraction", "AllowFocusOnInteractionProperty", "ExitDisplayModeOnAccessKeyInvoked", "ExitDisplayModeOnAccessKeyInvokedProperty"},
            {"Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs"},
            {"Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs", "PressedKeys"},
            {"Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs", "Handled"},
            {"Windows.UI.Xaml.Input.AccessKeyManager", "ExitDisplayMode", "IsDisplayModeEnabled", "IsDisplayModeEnabledChanged"},
            {"Windows.UI.Xaml.Input.ContextRequestedEventArgs", "Handled", "TryGetPosition"},
            {"Windows.UI.Xaml.Input.InputScopeNameValue", "ChatWithoutEmoji"},
            {"Windows.UI.Xaml.Input.KeyRoutedEventArgs", "DeviceId"},
            {"Windows.UI.Xaml.Media.Animation.ConnectedAnimation", "Cancel", "Completed", "TryStart"},
            {"Windows.UI.Xaml.Media.Animation.ConnectedAnimationService", "DefaultDuration", "DefaultEasingFunction", "GetAnimation", "GetForCurrentView", "PrepareToAnimate"},
            {"Windows.UI.Xaml.Media.Animation.RepositionThemeTransition", "IsStaggeringEnabled", "IsStaggeringEnabledProperty"},
            {"Windows.UI.Xaml.Media.Imaging.BitmapImage", "AutoPlay", "AutoPlayProperty", "IsAnimatedBitmap", "IsAnimatedBitmapProperty", "IsPlaying", "IsPlayingProperty", "Play", "Stop"},
            {"Windows.UI.Xaml.Media.BrushCollection", "Size"},
            {"Windows.UI.Xaml.Media.FastPlayFallbackBehaviour", "Skip", "Hide", "Disable"},
            {"Windows.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs", "GetDeferral", "SetThumbnailImage"},
            {"Windows.UI.Xaml.Shapes.Shape", "GetAlphaMask"},
            {"Windows.UI.Xaml.EnteredBackgroundEventHandler"},
            {"Windows.UI.Xaml.LeavingBackgroundEventHandler"},
            {"Windows.UI.Xaml.Application", "EnteredBackground", "FocusVisualKind", "LeavingBackground", "RequiresPointerMode"},
            {"Windows.UI.Xaml.ApplicationRequiresPointerMode", "Auto", "WhenRequested"},
            {"Windows.UI.Xaml.DragEventArgs", "AllowedOperations"},
            {"Windows.UI.Xaml.DragStartingEventArgs", "AllowedOperations"},
            {"Windows.UI.Xaml.ElementSoundKind", "Focus", "Invoke", "Show", "Hide", "MovePrevious", "MoveNext", "GoBack"},
            {"Windows.UI.Xaml.ElementSoundMode", "Default", "FocusOnly", "Off"},
            {"Windows.UI.Xaml.ElementSoundPlayer", "Play", "State", "Volume"},
            {"Windows.UI.Xaml.ElementSoundPlayerState", "Auto", "Off", "On"},
            {"Windows.UI.Xaml.FocusVisualKind", "DottedLine", "HighVisibility"},
            {"Windows.UI.Xaml.FrameworkElement", "AllowFocusOnInteraction", "AllowFocusOnInteractionProperty", "AllowFocusWhenDisabled", "AllowFocusWhenDisabledProperty", "FocusVisualMargin", "FocusVisualMarginProperty", "FocusVisualPrimaryBrush", "FocusVisualPrimaryBrushProperty", "FocusVisualPrimaryThickness", "FocusVisualPrimaryThicknessProperty", "FocusVisualSecondaryBrush", "FocusVisualSecondaryBrushProperty", "FocusVisualSecondaryThickness", "FocusVisualSecondaryThicknessProperty"},
            {"Windows.UI.Xaml.UIElement", "AccessKey", "AccessKeyDisplayDismissed", "AccessKeyDisplayRequested", "AccessKeyInvoked", "AccessKeyProperty", "AccessKeyScopeOwner", "AccessKeyScopeOwnerProperty", "ContextCanceled", "ContextFlyout", "ContextFlyoutProperty", "ContextRequested", "ExitDisplayModeOnAccessKeyInvoked", "ExitDisplayModeOnAccessKeyInvokedProperty", "IsAccessKeyScope", "IsAccessKeyScopeProperty"},
            {"Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator", "CrossOriginPreFlight", "Fetch", "Beacon"},
            {"Windows.Web.Http.Filters.HttpBaseProtocolFilter", "ClearAuthenticationCache", "ServerCustomValidationRequested"},
            {"Windows.Web.Http.Filters.HttpCacheReadBehavior", "NoCache"},
            {"Windows.Web.Http.Filters.HttpServerCustomValidationRequestedEventArgs", "GetDeferral", "Reject", "RequestMessage", "ServerCertificate", "ServerCertificateErrors", "ServerCertificateErrorSeverity", "ServerIntermediateCertificates"}
        }

        Static Dim _d2 As Dictionary(Of String, List(Of NewMember)) =
            (From kvp In _d
             Let members = If(kvp.Value Is Nothing, Nothing, kvp.Value.Select(Function(s) New NewMember(s)).ToList())
             Select type = kvp.Key, members).ToDictionary(Function(tm) tm.type, Function(tm) tm.members)
        Return _d2
    End Function

    <Extension>
    Sub Add(d As Dictionary(Of String, List(Of String)), type As String, ParamArray members As String())
        If members.Length = 0 Then d.Add(type, Nothing) Else d.Add(type, members.ToList())
    End Sub

End Module

